<?xml version="1.0" encoding="UTF-8"?>
<bpws:process exitOnStandardFault="no"
    name="tom.integration.fom.operation.ValidateOfferDirect"
    suppressJoinFailure="yes"
    targetNamespace="http://xmlns.example.com/20231221113716"
    xmlns:bpws="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:info="http://www.tibco.com/bw/process/info"
    xmlns:ns="http://www.tibco.com/pe/EngineTypes"
    xmlns:ns0="http://www.tibco.com/aff/orderservice"
    xmlns:ns1="http://it.fastweb.com.org/COM/IntegrationFOM/internal/schema"
    xmlns:ns2="http://xmlns.example.com/20231221113716PLT"
    xmlns:ns3="http://www.tibco.com/aff/ope/service/soap"
    xmlns:ns4="http://www.tibco.com/commonLog"
    xmlns:ns5="http://tns.tibco.com/bw/palette/internal/activityerror+1b81aa72-c4e3-44f5-b781-fc8720936e29"
    xmlns:sca="http://docs.oasis-open.org/ns/opencsa/sca/200912"
    xmlns:sca-bpel="http://docs.oasis-open.org/ns/opencsa/sca-bpel/200801"
    xmlns:tibex="http://www.tibco.com/bpel/2007/extensions"
    xmlns:tibprop="http://ns.tibco.com/bw/property" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <tibex:VariableDescriptor type="MemorySaving">
        <task name="LogStart">
            <endingVariables>
                <variable>LogStart-input</variable>
                <variable>LogStart</variable>
            </endingVariables>
        </task>
        <task name="LogEnd">
            <endingVariables>
                <variable>LogEnd-input</variable>
                <variable>LogEnd</variable>
            </endingVariables>
        </task>
        <task name="InvokeValidateOffer">
            <endingVariables>
                <variable>InvokeValidateOffer-input</variable>
                <variable>InvokeValidateOffer</variable>
                <variable>Start</variable>
            </endingVariables>
        </task>
    </tibex:VariableDescriptor>
    <tibex:Types>
        <xs:schema attributeFormDefault="unqualified"
            elementFormDefault="qualified"
            targetNamespace="http://www.tibco.com/pe/EngineTypes"
            xmlns:tns="http://www.tibco.com/pe/EngineTypes" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xs:complexType block="extension restriction"
                final="extension restriction" name="ErrorReport">
                <xs:sequence>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="StackTrace" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="Msg" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="FullClass" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="Class" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="ProcessStack" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" minOccurs="0" name="MsgCode" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" minOccurs="0" name="Data" type="tns:anydata"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType block="extension restriction"
                final="extension restriction" name="OptionalErrorReport">
                <xs:sequence>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" minOccurs="0"
                        name="StackTrace" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" minOccurs="0" name="Msg" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" minOccurs="0"
                        name="FullClass" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" minOccurs="0" name="Class" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" minOccurs="0"
                        name="ProcessStack" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" minOccurs="0" name="MsgCode" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" minOccurs="0" name="Data" type="tns:anydata"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType block="extension restriction"
                final="extension restriction" name="FaultDetail">
                <xs:sequence>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="ActivityName" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" minOccurs="0" name="Data" type="tns:anydata"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="Msg" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="MsgCode" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="ProcessStack" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="StackTrace" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="FullClass" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="Class" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType block="extension restriction"
                final="extension restriction" name="ProcessContext">
                <xs:sequence>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="JobId" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="ApplicationName" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="EngineName" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" name="ProcessInstanceId" type="xs:string"/>
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" minOccurs="0"
                        name="CustomJobId" type="xs:string"/>
                    <!--xs:element name="RestartedFromCheckpoint" form="unqualified" block="extension restriction substitution" type="xs:boolean"/-->
                    <xs:element
                        block="extension restriction substitution"
                        form="unqualified" maxOccurs="unbounded"
                        minOccurs="0" name="TrackingInfo" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType block="extension restriction"
                final="extension restriction" name="anydata">
                <xs:sequence>
                    <xs:any namespace="##any" processContents="lax"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element block="extension restriction substitution"
                final="extension restriction" name="OptionalErrorReport" type="tns:OptionalErrorReport"/>
            <xs:element block="extension restriction substitution"
                final="extension restriction" name="ErrorReport" type="tns:ErrorReport"/>
            <xs:element block="extension restriction substitution"
                final="extension restriction" name="FaultDetail" type="tns:FaultDetail"/>
            <xs:element block="extension restriction substitution"
                final="extension restriction" name="ProcessContext" type="tns:ProcessContext"/>
            <xs:element block="extension restriction substitution"
                final="extension restriction" name="CorrelationValue" type="xs:string"/>
        </xs:schema>
        <schema attributeFormDefault="unqualified"
            elementFormDefault="unqualified"
            targetNamespace="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions"
            version="" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions">
            <complexType name="ActivityExceptionType">
                <sequence>
                    <element name="msg" type="string"/>
                    <element minOccurs="0" name="msgCode" type="string"/>
                </sequence>
            </complexType>
            <element name="ActivityException" type="tns:ActivityExceptionType"/>
            <complexType name="ActivityTimedOutExceptionType">
                <complexContent>
                    <extension base="tns:ActivityExceptionType"/>
                </complexContent>
            </complexType>
            <element name="ActivityTimedOutException" type="tns:ActivityTimedOutExceptionType"/>
            <complexType name="DuplicateKeyExceptionType">
                <complexContent>
                    <extension base="tns:ActivityExceptionType">
                        <sequence>
                            <element name="duplicateKey" type="string"/>
                            <element minOccurs="0" name="previousJobID" type="string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>
            <element name="DuplicateKeyException" type="tns:DuplicateKeyExceptionType"/>
        </schema>
        <schema attributeFormDefault="unqualified"
            elementFormDefault="unqualified"
            targetNamespace="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions"
            xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://schemas.tibco.com/bw/plugins/http/5.0/httpExceptions">
            <complexType name="StatusLineType">
                <sequence>
                    <element name="httpVersion" type="string"/>
                    <element name="statusCode" type="integer"/>
                    <element name="reasonPhrase" type="string"/>
                </sequence>
            </complexType>
            <complexType name="HeadersType">
                <sequence>
                    <any maxOccurs="unbounded" minOccurs="0" processContents="lax"/>
                </sequence>
            </complexType>
            <complexType name="HttpMessageType">
                <sequence>
                    <element name="headers" type="tns:HeadersType"/>
                    <element minOccurs="0" name="binaryContent" type="base64Binary"/>
                    <element minOccurs="0" name="asciiContent" type="string"/>
                </sequence>
            </complexType>
            <complexType name="BaseExceptionType">
                <sequence>
                    <element form="unqualified" name="msg" type="string"/>
                    <element form="unqualified" name="msgCode" type="string"/>
                </sequence>
            </complexType>
            <complexType name="HttpExceptionType">
                <complexContent>
                    <extension base="tns:BaseExceptionType"/>
                </complexContent>
            </complexType>
            <complexType name="HttpClientExceptionType">
                <complexContent>
                    <extension base="tns:HttpResponseExceptionType"/>
                </complexContent>
            </complexType>
            <complexType name="HttpCommunicationExceptionType">
                <complexContent>
                    <extension base="tns:BaseExceptionType"/>
                </complexContent>
            </complexType>
            <complexType name="HttpResponseExceptionType">
                <complexContent>
                    <extension base="tns:BaseExceptionType">
                        <sequence>
                            <element name="statusLine" type="tns:StatusLineType"/>
                            <element minOccurs="0" name="httpMessage" type="tns:HttpMessageType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>
            <complexType name="HttpServerExceptionType">
                <complexContent>
                    <extension base="tns:HttpResponseExceptionType"/>
                </complexContent>
            </complexType>
            <element name="HttpClientException" type="tns:HttpClientExceptionType"/>
            <element name="HttpCommunicationException" type="tns:HttpCommunicationExceptionType"/>
            <element name="HttpException" type="tns:HttpExceptionType"/>
            <element name="HttpResponseException" type="tns:HttpResponseExceptionType"/>
            <element name="HttpServerException" type="tns:HttpServerExceptionType"/>
            <element name="ActivityTimedOutException" type="tns:BaseExceptionType"/>
        </schema>
        <schema elementFormDefault="unqualified"
            targetNamespace="http://tns.tibco.com/bw/palette/internal/activityerror+1b81aa72-c4e3-44f5-b781-fc8720936e29"
            xmlns="http://www.w3.org/2001/XMLSchema"
            xmlns:Q1="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions"
            xmlns:Q2="http://www.tibco.com/aff/orderservice/result" xmlns:tns="http://tns.tibco.com/bw/palette/internal/activityerror+1b81aa72-c4e3-44f5-b781-fc8720936e29">
            <import
                namespace="http://www.tibco.com/aff/orderservice/result" schemaLocation="../../../../../Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl"/>
            <import namespace="http://schemas.tibco.com/bw/pe/plugin/5.0/exceptions"/>
            <element name="ActivityErrorData" type="tns:ActivityErrorDataType"/>
            <complexType name="ActivityErrorDataType">
                <choice>
                    <element maxOccurs="1" minOccurs="0" ref="Q1:ActivityTimedOutException"/>
                    <element maxOccurs="1" minOccurs="1" ref="Q2:resultFault"/>
                </choice>
            </complexType>
        </schema>
        <wsdl:definitions
            targetNamespace="http://xmlns.example.com/20231221113716PLT"
            xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
            xmlns:ptyp="http://www.tibco.com/aff/ope/service/soap"
            xmlns:tns="http://xmlns.example.com/20231221113716PLT"
            xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop"
            xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
            <plnk:partnerLinkType name="partnerLinkType">
                <plnk:role name="use" portType="ptyp:OfferPriceService"/>
            </plnk:partnerLinkType>
            <wsdl:import namespace="http://www.tibco.com/aff/ope/service/soap"/>
        </wsdl:definitions>
    </tibex:Types>
    <tibex:ProcessInfo callable="true" createdBy="user"
        createdOn="Fri Dec 15 09:27:40 CET 2023" description=""
        extraErrorVars="true" modifiers="public"
        productVersion="6.10.0 V23 2023-11-10" scalable="true"
        singleton="true" stateless="false" type="IT"/>
    <tibex:ProcessInterface context=""
        input="{http://it.fastweb.com.org/COM/IntegrationFOM/internal/schema}ValidateOfferRequest" output="{http://it.fastweb.com.org/COM/IntegrationFOM/internal/schema}ValidateOfferResponse"/>
    <tibex:ProcessTemplateConfigurations/>
    <notation:Diagram measurementUnit="Pixel" type="BWProcess"
        xmlns:bwnotation="http://tns.tibco.com/bw/runtime/BWNotation"
        xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.2/notation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <children type="2001">
            <children type="5001"/>
            <children type="3002">
                <styles xsi:type="notation:SortingStyle"/>
                <styles xsi:type="notation:FilteringStyle"/>
            </children>
            <children type="3003">
                <styles xsi:type="notation:SortingStyle"/>
                <styles xsi:type="notation:FilteringStyle"/>
            </children>
            <children type="3004">
                <children type="4018">
                    <children type="3018">
                        <children type="4020">
                            <children type="3020">
                                <children type="4005">
                                    <children type="3007">
                                    <children type="4002">
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <styles fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <styles
                                    backgroundColor="16777215"
                                    gradientEndColor="50431"
                                    gradientStartColor="16777215" xsi:type="bwnotation:BackgroundStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.0"/>
                                    <layoutConstraint x="-14"
                                    xsi:type="notation:Bounds" y="50"/>
                                    </children>
                                    <children type="4002">
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <styles fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <styles
                                    backgroundColor="16777215"
                                    gradientEndColor="50431"
                                    gradientStartColor="16777215" xsi:type="bwnotation:BackgroundStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.1"/>
                                    <layoutConstraint x="551"
                                    xsi:type="notation:Bounds" y="50"/>
                                    </children>
                                    <children type="4002">
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.2"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.2"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.2"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.2"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <styles fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <styles
                                    backgroundColor="16777215"
                                    gradientEndColor="50431"
                                    gradientStartColor="16777215" xsi:type="bwnotation:BackgroundStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.2"/>
                                    <layoutConstraint x="122"
                                    xsi:type="notation:Bounds" y="50"/>
                                    </children>
                                    <children type="4002">
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.3"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.3"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.3"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.3"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <styles fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <styles
                                    backgroundColor="16777215"
                                    gradientEndColor="50431"
                                    gradientStartColor="16777215" xsi:type="bwnotation:BackgroundStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.3"/>
                                    <layoutConstraint x="418"
                                    xsi:type="notation:Bounds" y="50"/>
                                    </children>
                                    <children type="4002">
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <children type="4017">
                                    <styles
                                    fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <layoutConstraint xsi:type="notation:Bounds"/>
                                    </children>
                                    <styles fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <styles
                                    backgroundColor="16777215"
                                    gradientEndColor="50431"
                                    gradientStartColor="16777215" xsi:type="bwnotation:BackgroundStyle"/>
                                    <element href="//0/@process/@activity/@activity/@activities.4"/>
                                    <layoutConstraint x="275"
                                    xsi:type="notation:Bounds" y="50"/>
                                    </children>
                                    <styles xsi:type="notation:DrawerStyle"/>
                                    <styles xsi:type="notation:SortingStyle"/>
                                    <styles xsi:type="notation:FilteringStyle"/>
                                    <element href="//0/@process/@activity/@activity"/>
                                    </children>
                                    <styles fontName="Segoe UI"
                                    lineColor="0" xsi:type="notation:ShapeStyle"/>
                                    <styles backgroundColor="16777215"
                                    gradientEndColor="50431"
                                    gradientStartColor="16777215" xsi:type="bwnotation:BackgroundStyle"/>
                                    <styles xsi:type="bwnotation:ResizingStyle"/>
                                    <element href="//0/@process/@activity/@activity"/>
                                    <layoutConstraint height="384"
                                    width="684" xsi:type="notation:Bounds"/>
                                </children>
                                <styles xsi:type="notation:SortingStyle"/>
                                <styles xsi:type="notation:FilteringStyle"/>
                            </children>
                            <styles fontName="Segoe UI" lineColor="0" xsi:type="notation:ShapeStyle"/>
                            <styles xsi:type="bwnotation:BackgroundStyle"/>
                            <styles xsi:type="bwnotation:ResizingStyle"/>
                            <element href="//0/@process/@activity"/>
                            <layoutConstraint height="384" width="687" xsi:type="notation:Bounds"/>
                        </children>
                        <styles xsi:type="notation:SortingStyle"/>
                        <styles xsi:type="notation:FilteringStyle"/>
                        <element href="//0/@process/@activity"/>
                    </children>
                    <styles fontName="Segoe UI" lineColor="0" xsi:type="notation:ShapeStyle"/>
                    <styles xsi:type="bwnotation:BackgroundStyle"/>
                    <styles xsi:type="bwnotation:ResizingStyle"/>
                    <element href="//0/@process/@activity"/>
                    <layoutConstraint height="408" width="687" x="1"
                        xsi:type="notation:Bounds" y="1"/>
                </children>
                <styles xsi:type="notation:SortingStyle"/>
                <styles xsi:type="notation:FilteringStyle"/>
                <element href="//0/@process"/>
            </children>
            <styles fontName="Segoe UI" lineColor="0" xsi:type="notation:ShapeStyle"/>
            <element href="//0/@process"/>
            <layoutConstraint height="460" width="1029" xsi:type="notation:Bounds"/>
        </children>
        <styles xsi:type="notation:DiagramStyle"/>
        <element href="//0"/>
        <edges
            source="//@children.0/@children.3/@children.0/@children.0/@children.0/@children.0/@children.0/@children.0/@children.0"
            target="//@children.0/@children.3/@children.0/@children.0/@children.0/@children.0/@children.0/@children.0/@children.2" type="4006">
            <children type="6002">
                <layoutConstraint xsi:type="notation:Location" y="40"/>
            </children>
            <styles lineColor="0" xsi:type="notation:ConnectorStyle"/>
            <styles fontName="Segoe UI" xsi:type="notation:FontStyle"/>
            <element href="//0/@process/@activity/@activity/@links/@children.0"/>
            <bendpoints points="[25, 0, -111, 0]$[112, 0, -24, 0]" xsi:type="notation:RelativeBendpoints"/>
        </edges>
        <edges
            source="//@children.0/@children.3/@children.0/@children.0/@children.0/@children.0/@children.0/@children.0/@children.2"
            target="//@children.0/@children.3/@children.0/@children.0/@children.0/@children.0/@children.0/@children.0/@children.4" type="4006">
            <children type="6002">
                <layoutConstraint xsi:type="notation:Location" y="40"/>
            </children>
            <styles lineColor="0" xsi:type="notation:ConnectorStyle"/>
            <styles fontName="Segoe UI" xsi:type="notation:FontStyle"/>
            <element href="//0/@process/@activity/@activity/@links/@children.1"/>
            <bendpoints points="[25, 0, -128, 0]$[129, 0, -24, 0]" xsi:type="notation:RelativeBendpoints"/>
        </edges>
        <edges
            source="//@children.0/@children.3/@children.0/@children.0/@children.0/@children.0/@children.0/@children.0/@children.4"
            target="//@children.0/@children.3/@children.0/@children.0/@children.0/@children.0/@children.0/@children.0/@children.3" type="4006">
            <children type="6002">
                <layoutConstraint xsi:type="notation:Location" y="40"/>
            </children>
            <styles lineColor="0" xsi:type="notation:ConnectorStyle"/>
            <styles fontName="Segoe UI" xsi:type="notation:FontStyle"/>
            <element href="//0/@process/@activity/@activity/@links/@children.2"/>
            <bendpoints points="[25, 0, -118, 0]$[119, 0, -24, 0]" xsi:type="notation:RelativeBendpoints"/>
        </edges>
        <edges
            source="//@children.0/@children.3/@children.0/@children.0/@children.0/@children.0/@children.0/@children.0/@children.3"
            target="//@children.0/@children.3/@children.0/@children.0/@children.0/@children.0/@children.0/@children.0/@children.1" type="4006">
            <children type="6002">
                <layoutConstraint xsi:type="notation:Location" y="40"/>
            </children>
            <styles lineColor="0" xsi:type="notation:ConnectorStyle"/>
            <styles fontName="Segoe UI" xsi:type="notation:FontStyle"/>
            <element href="//0/@process/@activity/@activity/@links/@children.3"/>
            <bendpoints points="[25, 0, -108, 0]$[109, 0, -24, 0]" xsi:type="notation:RelativeBendpoints"/>
        </edges>
    </notation:Diagram>
    <tibex:NamespaceRegistry enabled="true">
        <tibex:namespaceItem
            namespace="http://www.tibco.com/aff/orderservice" prefix="tns"/>
        <tibex:namespaceItem
            namespace="http://it.fastweb.com.org/COM/IntegrationFOM/internal/schema" prefix="tns1"/>
        <tibex:namespaceItem namespace="http://www.tibco.com/commonLog" prefix="tns2"/>
        <tibex:namespaceItem
            namespace="http://www.tibco.com/aff/ope/service/soap" prefix="tns3"/>
        <tibex:namespaceItem
            namespace="http://www.tibco.com/aff/offerpriceservice" prefix="ns"/>
        <tibex:namespaceItem namespace="http://www.tibco.com/aff/order" prefix="ns1"/>
        <tibex:namespaceItem
            namespace="http://www.tibco.com/aff/commontypes" prefix="ns2"/>
        <tibex:namespaceItem
            namespace="http://www.tibco.com/ope/segment" prefix="ns5"/>
        <tibex:namespaceItem
            namespace="http://xmlns.example.com/20210208100017PLT" prefix="tns5"/>
        <tibex:namespaceItem
            namespace="http://www.tibco.com/ope/message" prefix="msg"/>
        <tibex:namespaceItem
            namespace="http://www.tibco.com/aff/orderservice/result" prefix="ns3"/>
    </tibex:NamespaceRegistry>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" namespace="http://www.tibco.com/aff/orderservice"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" namespace="http://it.fastweb.com.org/COM/IntegrationFOM/internal/schema"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" namespace="http://www.tibco.com/commonLog"/>
    <bpws:import importType="http://schemas.xmlsoap.org/wsdl/" namespace="http://www.tibco.com/aff/ope/service/soap"/>
    <bpws:partnerLinks>
        <bpws:partnerLink name="OfferPriceService"
            partnerLinkType="ns2:partnerLinkType" partnerRole="use"
            sca-bpel:ignore="true"
            sca-bpel:reference="OfferPriceService" sca-bpel:wiredByImpl="false">
            <tibex:ReferenceBinding>
                <tibex:binding>
                    <bwbinding:BWBaseBinding
                        xmlns:axis2="http://xsd.tns.tibco.com/bw/models/binding/soap/axis2"
                        xmlns:bwbinding="http://tns.tibco.com/bw/model/core/bwbinding"
                        xmlns:offerpriceservice="http://www.tibco.com/aff/offerpriceservice"
                        xmlns:pt="http://www.tibco.com/aff/ope/service/soap"
                        xmlns:result="http://www.tibco.com/aff/orderservice/result"
                        xmlns:sca="http://www.osoa.org/xmlns/sca/1.0"
                        xmlns:scact="http://xsd.tns.tibco.com/amf/models/sca/componentType"
                        xmlns:scaext="http://xsd.tns.tibco.com/amf/models/sca/extensions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                        <referenceBinding name="OfferPriceService" xsi:type="scact:Reference">
                            <sca:interface.wsdl
                                interface="http://www.tibco.com/aff/ope/service/soap#wsdl.interface(OfferPriceService)" scaext:wsdlLocation="../../../../../Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl"/>
                            <scaext:binding
                                locationURI="http://localhost:9094/api/opeService"
                                modelVersion="1.2.0"
                                name="SOAPReferenceBinding"
                                portName="OfferPriceServiceSOAP"
                                portTypeQName="pt:OfferPriceService"
                                portTypeWSDLLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl"
                                serviceBindingQName="pt:OfferPriceServiceSOAP"
                                serviceQName="pt:OfferPriceService"
                                transportBindingType="HTTP"
                                wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl" xsi:type="axis2:SOAPReferenceBinding">
                                <bindingType style="DOCUMENT"/>
                                <operationConfiguration
                                    action="http://www.tibco.com/aff/ope/service/soap/GetOffer" operationName="GetOffer">
                                    <bindingType style="DOCUMENT"/>
                                    <messageConfiguration
                                    messageQName="pt:GetOfferRequestMsg" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    encoding="literal"
                                    partElementName="offerpriceservice:GetOfferRequest"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <messageConfiguration
                                    messageDirection="OUTPUT"
                                    messageQName="pt:GetOfferResponseMsg" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    encoding="literal"
                                    partElementName="offerpriceservice:GetOfferResponse"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <messageConfiguration action="fault"
                                    messageDirection="FAULT"
                                    messageQName="pt:ResultFaultException" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    partElementName="result:resultFault"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <context>
                                    <inputMapping/>
                                    <outputMapping direction="OUTPUT"/>
                                    <faultMappings direction="FAULT" faultName="fault"/>
                                    </context>
                                </operationConfiguration>
                                <operationConfiguration
                                    action="http://www.tibco.com/aff/ope/service/soap/ValidateOffer" operationName="ValidateOffer">
                                    <bindingType style="DOCUMENT"/>
                                    <messageConfiguration
                                    messageQName="pt:ValidateOfferRequestMsg" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    encoding="literal"
                                    partElementName="offerpriceservice:ValidateOfferRequest"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <messageConfiguration
                                    messageDirection="OUTPUT"
                                    messageQName="pt:ValidateOfferResponseMsg" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    encoding="literal"
                                    partElementName="offerpriceservice:ValidateOfferResponse"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <messageConfiguration action="fault"
                                    messageDirection="FAULT"
                                    messageQName="pt:ResultFaultException" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    partElementName="result:resultFault"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <context>
                                    <inputMapping/>
                                    <outputMapping direction="OUTPUT"/>
                                    <faultMappings direction="FAULT" faultName="fault"/>
                                    </context>
                                </operationConfiguration>
                                <operationConfiguration
                                    action="http://www.tibco.com/aff/ope/service/soap/GetPrices" operationName="GetPrices">
                                    <bindingType style="DOCUMENT"/>
                                    <messageConfiguration
                                    messageQName="pt:GetPricesRequestMsg" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    encoding="literal"
                                    partElementName="offerpriceservice:GetPricesRequest"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <messageConfiguration
                                    messageDirection="OUTPUT"
                                    messageQName="pt:GetPricesResponseMsg" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    encoding="literal"
                                    partElementName="offerpriceservice:GetPricesResponse"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <messageConfiguration action="fault"
                                    messageDirection="FAULT"
                                    messageQName="pt:ResultFaultException" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    partElementName="result:resultFault"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <context>
                                    <inputMapping/>
                                    <outputMapping direction="OUTPUT"/>
                                    <faultMappings direction="FAULT" faultName="fault"/>
                                    </context>
                                </operationConfiguration>
                                <operationConfiguration
                                    action="http://www.tibco.com/aff/ope/service/soap/GetProductInformation" operationName="GetProductInformation">
                                    <bindingType style="DOCUMENT"/>
                                    <messageConfiguration
                                    messageQName="pt:GetProductInformationRequestMsg" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    encoding="literal"
                                    partElementName="offerpriceservice:GetProductInformationRequest"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <messageConfiguration
                                    messageDirection="OUTPUT"
                                    messageQName="pt:GetProductInformationResponseMsg" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    encoding="literal"
                                    partElementName="offerpriceservice:GetProductInformationResponse"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <messageConfiguration action="fault"
                                    messageDirection="FAULT"
                                    messageQName="pt:ResultFaultException" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    partElementName="result:resultFault"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <context>
                                    <inputMapping/>
                                    <outputMapping direction="OUTPUT"/>
                                    <faultMappings direction="FAULT" faultName="fault"/>
                                    </context>
                                </operationConfiguration>
                                <operationConfiguration
                                    action="http://www.tibco.com/aff/ope/service/soap/GetPriceInformation" operationName="GetPriceInformation">
                                    <bindingType style="DOCUMENT"/>
                                    <messageConfiguration
                                    messageQName="pt:GetPriceInformationRequestMsg" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    encoding="literal"
                                    partElementName="offerpriceservice:GetPriceInformationRequest"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <messageConfiguration
                                    messageDirection="OUTPUT"
                                    messageQName="pt:GetPriceInformationResponseMsg" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    encoding="literal"
                                    partElementName="offerpriceservice:GetPriceInformationResponse"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <messageConfiguration action="fault"
                                    messageDirection="FAULT"
                                    messageQName="pt:ResultFaultException" wsdlLocation="platform:/resource/TOMIntegrationFOM.module/Service%20Descriptors/Integration/FOM/OfferPriceServiceHTTP_vMod_Corrected.wsdl">
                                    <messagePartConfigurations
                                    partElementName="result:resultFault"
                                    partName="parameters" xsi:type="axis2:BodyPartConfiguration"/>
                                    </messageConfiguration>
                                    <context>
                                    <inputMapping/>
                                    <outputMapping direction="OUTPUT"/>
                                    <faultMappings direction="FAULT" faultName="fault"/>
                                    </context>
                                </operationConfiguration>
                                <outboundConfiguration
                                    httpClient="tomintegrationfom.module.HttpClientOPE" xsi:type="axis2:HttpTransportConfiguration"/>
                            </scaext:binding>
                            <scact:bindingAdjunct bindingName="SOAPReferenceBinding"/>
                        </referenceBinding>
                    </bwbinding:BWBaseBinding>
                </tibex:binding>
            </tibex:ReferenceBinding>
        </bpws:partnerLink>
    </bpws:partnerLinks>
    <bpws:variables>
        <bpws:variable element="ns:ProcessContext"
            name="_processContext" sca-bpel:internal="true"/>
        <bpws:variable element="ns1:ValidateOfferRequest" name="Start"
            sca-bpel:internal="true" tibex:parameter="in"/>
        <bpws:variable element="ns1:ValidateOfferResponse"
            name="End-input" sca-bpel:internal="true" tibex:parameter="out"/>
        <bpws:variable element="ns4:Log" name="LogStart-input" sca-bpel:internal="true"/>
        <bpws:variable element="ns4:Log" name="LogStart" sca-bpel:internal="true"/>
        <bpws:variable element="ns4:Log" name="LogEnd-input" sca-bpel:internal="true"/>
        <bpws:variable element="ns4:Log" name="LogEnd" sca-bpel:internal="true"/>
        <bpws:variable messageType="ns3:ValidateOfferRequestMsg"
            name="InvokeValidateOffer-input" sca-bpel:internal="true"/>
        <bpws:variable messageType="ns3:ValidateOfferResponseMsg"
            name="InvokeValidateOffer" sca-bpel:internal="true"/>
        <bpws:variable element="ns5:ActivityErrorData"
            name="_error_InvokeValidateOffer" sca-bpel:internal="true"/>
        <bpws:variable element="ns:ErrorReport" name="_error" sca-bpel:internal="true"/>
    </bpws:variables>
    <bpws:extensions>
        <bpws:extension mustUnderstand="no" namespace="http://www.eclipse.org/gmf/runtime/1.0.2/notation"/>
        <bpws:extension mustUnderstand="no" namespace="http://www.tibco.com/bw/process/info"/>
        <bpws:extension mustUnderstand="no" namespace="http://docs.oasis-open.org/ns/opencsa/sca-bpel/200801"/>
        <bpws:extension mustUnderstand="no" namespace="http://docs.oasis-open.org/ns/opencsa/sca/200912"/>
        <bpws:extension mustUnderstand="no" namespace="http://ns.tibco.com/bw/property"/>
        <bpws:extension mustUnderstand="no" namespace="http://www.tibco.com/bpel/2007/extensions"/>
    </bpws:extensions>
    <bpws:scope name="scope">
        <bpws:flow name="flow">
            <bpws:links>
                <bpws:link name="StartToLogStart" tibex:linkType="SUCCESS"/>
                <bpws:link name="LogStartToValidateOffer" tibex:linkType="SUCCESS"/>
                <bpws:link name="ValidateOfferToLogEnd" tibex:linkType="SUCCESS"/>
                <bpws:link name="LogEndToEnd" tibex:linkType="SUCCESS"/>
            </bpws:links>
            <bpws:extensionActivity>
                <tibex:receiveEvent createInstance="yes"
                    eventTimeout="0" name="Start"
                    tibex:xpdlId="e59110a0-6795-496b-a1bc-c2d9c79d7310"
                    variable="Start" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                    <bpws:sources>
                        <bpws:source linkName="StartToLogStart"/>
                    </bpws:sources>
                    <tibex:eventSource>
                        <tibex:StartEvent xmlns:tibex="http://www.tibco.com/bpel/2007/extensions"/>
                    </tibex:eventSource>
                </tibex:receiveEvent>
            </bpws:extensionActivity>
            <bpws:extensionActivity>
                <tibex:activityExtension
                    expression="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xa;&lt;xsl:stylesheet xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; xmlns:ns=&quot;http://www.tibco.com/aff/offerpriceservice&quot; xmlns:ns1=&quot;http://www.tibco.com/aff/order&quot; xmlns:tns1=&quot;http://it.fastweb.com.org/COM/IntegrationFOM/internal/schema&quot; xmlns:ns1=&quot;http://www.tibco.com/aff/order&quot; xmlns:msg=&quot;http://www.tibco.com/ope/message&quot; xmlns:ns2=&quot;http://www.tibco.com/aff/commontypes&quot; xmlns:tns5=&quot;http://xmlns.example.com/20210208100017PLT&quot; xmlns:ns3=&quot;http://www.tibco.com/aff/orderservice/result&quot; version=&quot;2.0&quot;>&lt;xsl:param name=&quot;InvokeValidateOffer&quot;/>&lt;xsl:template name=&quot;End-input&quot; match=&quot;/&quot;>&lt;tns1:ValidateOfferResponse>&lt;xsl:if test=&quot;$InvokeValidateOffer/parameters/ns:ValidateOfferResponse/@BusinessTransactionID&quot;>&lt;xsl:attribute name=&quot;BusinessTransactionID&quot;>&lt;xsl:value-of select=&quot;$InvokeValidateOffer/parameters/ns:ValidateOfferResponse/@BusinessTransactionID&quot;/>&lt;/xsl:attribute>&lt;/xsl:if>&lt;xsl:for-each select=&quot;$InvokeValidateOffer/parameters/ns:ValidateOfferResponse/ns3:resultStatus&quot;>&lt;tns1:resultStatus>&lt;tns1:deployment>&lt;xsl:value-of select=&quot;ns3:deployment&quot;/>&lt;/tns1:deployment>&lt;tns1:service>&lt;xsl:value-of select=&quot;ns3:service&quot;/>&lt;/tns1:service>&lt;tns1:operation>&lt;xsl:value-of select=&quot;ns3:operation&quot;/>&lt;/tns1:operation>&lt;xsl:if test=&quot;ns3:component&quot;>&lt;tns1:component>&lt;xsl:value-of select=&quot;ns3:component&quot;/>&lt;/tns1:component>&lt;/xsl:if>&lt;tns1:severity>&lt;xsl:value-of select=&quot;ns3:severity&quot;/>&lt;/tns1:severity>&lt;tns1:code>&lt;xsl:value-of select=&quot;ns3:code&quot;/>&lt;/tns1:code>&lt;tns1:message>&lt;xsl:value-of select=&quot;ns3:message&quot;/>&lt;/tns1:message>&lt;/tns1:resultStatus>&lt;/xsl:for-each>&lt;tns1:ValidationPass>&lt;xsl:value-of select=&quot;$InvokeValidateOffer/parameters/ns:ValidateOfferResponse/ns:ValidationPass&quot;/>&lt;/tns1:ValidationPass>&lt;xsl:for-each select=&quot;$InvokeValidateOffer/parameters/ns:ValidateOfferResponse/ns:ValidationResultMessage&quot;>&lt;tns1:ValidationResultMessage>&lt;xsl:choose>&lt;xsl:when test=&quot;exists(ns:Linenumber)&quot;>&lt;tns1:Linenumber>&lt;xsl:value-of select=&quot;ns:Linenumber&quot;/>&lt;/tns1:Linenumber>&lt;/xsl:when>&lt;xsl:otherwise>&lt;tns1:Linenumber>&lt;xsl:value-of select=&quot;ns:InventoryID&quot;/>&lt;/tns1:Linenumber>&lt;/xsl:otherwise>&lt;/xsl:choose>&lt;tns1:ProductID>&lt;xsl:value-of select=&quot;ns:ProductID&quot;/>&lt;/tns1:ProductID>&lt;xsl:for-each select=&quot;msg:Message&quot;>&lt;tns1:Message>&lt;tns1:Code>&lt;xsl:value-of select=&quot;msg:Code&quot;/>&lt;/tns1:Code>&lt;tns1:Type>&lt;xsl:value-of select=&quot;msg:Type&quot;/>&lt;/tns1:Type>&lt;tns1:Details>&lt;xsl:value-of select=&quot;msg:Details&quot;/>&lt;/tns1:Details>&lt;xsl:if test=&quot;msg:CausingItem&quot;>&lt;tns1:CausingItem>&lt;xsl:value-of select=&quot;msg:CausingItem&quot;/>&lt;/tns1:CausingItem>&lt;/xsl:if>&lt;xsl:if test=&quot;msg:CausingItemID&quot;>&lt;tns1:CausingItemID>&lt;xsl:value-of select=&quot;msg:CausingItemID&quot;/>&lt;/tns1:CausingItemID>&lt;/xsl:if>&lt;xsl:if test=&quot;msg:CausingItemPosition&quot;>&lt;tns1:CausingItemPosition>&lt;xsl:value-of select=&quot;msg:CausingItemPosition&quot;/>&lt;/tns1:CausingItemPosition>&lt;/xsl:if>&lt;xsl:if test=&quot;msg:CausingItemPositionID&quot;>&lt;tns1:CausingItemPositionID>&lt;xsl:value-of select=&quot;msg:CausingItemPositionID&quot;/>&lt;/tns1:CausingItemPositionID>&lt;/xsl:if>&lt;xsl:if test=&quot;msg:RuleViolation&quot;>&lt;tns1:RuleViolation>&lt;xsl:value-of select=&quot;msg:RuleViolation&quot;/>&lt;/tns1:RuleViolation>&lt;/xsl:if>&lt;xsl:for-each select=&quot;ns1:udf&quot;>&lt;tns1:udf>&lt;tns1:name>&lt;xsl:value-of select=&quot;ns1:name&quot;/>&lt;/tns1:name>&lt;tns1:value>&lt;xsl:value-of select=&quot;ns1:value&quot;/>&lt;/tns1:value>&lt;/tns1:udf>&lt;/xsl:for-each>&lt;/tns1:Message>&lt;/xsl:for-each>&lt;/tns1:ValidationResultMessage>&lt;/xsl:for-each>&lt;xsl:for-each select=&quot;$InvokeValidateOffer/parameters/ns:ValidateOfferResponse/ns1:orderRequest&quot;>&lt;tns1:orderRequest>&lt;tns1:orderRef>&lt;xsl:value-of select=&quot;ns1:orderRef&quot;/>&lt;/tns1:orderRef>&lt;tns1:header>&lt;xsl:if test=&quot;ns1:header/ns1:description&quot;>&lt;tns1:description>&lt;xsl:value-of select=&quot;ns1:header/ns1:description&quot;/>&lt;/tns1:description>&lt;/xsl:if>&lt;xsl:choose>&lt;xsl:when test=&quot;exists(ns1:header/ns1:customerID)&quot;>&lt;tns1:customerID>&lt;xsl:value-of select=&quot;ns1:header/ns1:customerID&quot;/>&lt;/tns1:customerID>&lt;/xsl:when>&lt;xsl:otherwise>&lt;tns1:customerID>&lt;xsl:value-of select=&quot;ns1:header/ns1:subscriberID&quot;/>&lt;/tns1:customerID>&lt;/xsl:otherwise>&lt;/xsl:choose>&lt;xsl:choose>&lt;xsl:when test=&quot;exists(ns1:header/ns1:requiredByDate)&quot;>&lt;xsl:if test=&quot;ns1:header/ns1:requiredByDate&quot;>&lt;tns1:requiredByDate>&lt;xsl:value-of select=&quot;ns1:header/ns1:requiredByDate&quot;/>&lt;/tns1:requiredByDate>&lt;/xsl:if>&lt;/xsl:when>&lt;xsl:otherwise>&lt;xsl:if test=&quot;ns1:header/ns1:requiredOnDate&quot;>&lt;tns1:requiredByDate>&lt;xsl:value-of select=&quot;ns1:header/ns1:requiredOnDate&quot;/>&lt;/tns1:requiredByDate>&lt;/xsl:if>&lt;/xsl:otherwise>&lt;/xsl:choose>&lt;xsl:if test=&quot;ns1:header/ns1:orderPriority&quot;>&lt;tns1:orderPriority>&lt;xsl:value-of select=&quot;ns1:header/ns1:orderPriority&quot;/>&lt;/tns1:orderPriority>&lt;/xsl:if>&lt;xsl:for-each select=&quot;ns1:header/ns1:invoiceAddress&quot;>&lt;tns1:invoiceAddress>&lt;tns1:line1>&lt;xsl:value-of select=&quot;ns2:line1&quot;/>&lt;/tns1:line1>&lt;xsl:if test=&quot;ns2:line2&quot;>&lt;tns1:line2>&lt;xsl:value-of select=&quot;ns2:line2&quot;/>&lt;/tns1:line2>&lt;/xsl:if>&lt;xsl:if test=&quot;ns2:line3&quot;>&lt;tns1:line3>&lt;xsl:value-of select=&quot;ns2:line3&quot;/>&lt;/tns1:line3>&lt;/xsl:if>&lt;tns1:locality>&lt;xsl:value-of select=&quot;ns2:locality&quot;/>&lt;/tns1:locality>&lt;xsl:if test=&quot;ns2:region&quot;>&lt;tns1:region>&lt;xsl:value-of select=&quot;ns2:region&quot;/>&lt;/tns1:region>&lt;/xsl:if>&lt;tns1:country>&lt;xsl:value-of select=&quot;ns2:country&quot;/>&lt;/tns1:country>&lt;tns1:postCode>&lt;xsl:value-of select=&quot;ns2:postCode&quot;/>&lt;/tns1:postCode>&lt;xsl:if test=&quot;ns2:supplementaryLocation&quot;>&lt;tns1:supplementaryLocation>&lt;xsl:value-of select=&quot;ns2:supplementaryLocation&quot;/>&lt;/tns1:supplementaryLocation>&lt;/xsl:if>&lt;/tns1:invoiceAddress>&lt;/xsl:for-each>&lt;xsl:for-each select=&quot;ns1:header/ns1:deliveryAddress&quot;>&lt;tns1:deliveryAddress>&lt;tns1:line1>&lt;xsl:value-of select=&quot;ns2:line1&quot;/>&lt;/tns1:line1>&lt;xsl:if test=&quot;ns2:line2&quot;>&lt;tns1:line2>&lt;xsl:value-of select=&quot;ns2:line2&quot;/>&lt;/tns1:line2>&lt;/xsl:if>&lt;xsl:if test=&quot;ns2:line3&quot;>&lt;tns1:line3>&lt;xsl:value-of select=&quot;ns2:line3&quot;/>&lt;/tns1:line3>&lt;/xsl:if>&lt;tns1:locality>&lt;xsl:value-of select=&quot;ns2:locality&quot;/>&lt;/tns1:locality>&lt;xsl:if test=&quot;ns2:region&quot;>&lt;tns1:region>&lt;xsl:value-of select=&quot;ns2:region&quot;/>&lt;/tns1:region>&lt;/xsl:if>&lt;tns1:country>&lt;xsl:value-of select=&quot;ns2:country&quot;/>&lt;/tns1:country>&lt;tns1:postCode>&lt;xsl:value-of select=&quot;ns2:postCode&quot;/>&lt;/tns1:postCode>&lt;xsl:if test=&quot;ns2:supplementaryLocation&quot;>&lt;tns1:supplementaryLocation>&lt;xsl:value-of select=&quot;ns2:supplementaryLocation&quot;/>&lt;/tns1:supplementaryLocation>&lt;/xsl:if>&lt;/tns1:deliveryAddress>&lt;/xsl:for-each>&lt;xsl:if test=&quot;ns1:header/ns1:notes&quot;>&lt;tns1:notes>&lt;xsl:value-of select=&quot;ns1:header/ns1:notes&quot;/>&lt;/tns1:notes>&lt;/xsl:if>&lt;xsl:for-each select=&quot;ns1:header/ns1:slaID&quot;>&lt;tns1:slaID>&lt;xsl:value-of select=&quot;.&quot;/>&lt;/tns1:slaID>&lt;/xsl:for-each>&lt;xsl:for-each select=&quot;ns1:header/ns1:udf&quot;>&lt;tns1:udf>&lt;tns1:name>&lt;xsl:value-of select=&quot;ns1:name&quot;/>&lt;/tns1:name>&lt;tns1:value>&lt;xsl:value-of select=&quot;ns1:value&quot;/>&lt;/tns1:value>&lt;/tns1:udf>&lt;/xsl:for-each>&lt;/tns1:header>&lt;xsl:for-each select=&quot;ns1:line&quot;>&lt;tns1:line>&lt;tns1:lineNumber>&lt;xsl:value-of select=&quot;ns1:lineNumber&quot;/>&lt;/tns1:lineNumber>&lt;xsl:if test=&quot;ns1:subscriberID&quot;>&lt;tns1:subscriberID>&lt;xsl:value-of select=&quot;ns1:subscriberID&quot;/>&lt;/tns1:subscriberID>&lt;/xsl:if>&lt;tns1:productID>&lt;xsl:value-of select=&quot;ns1:productID&quot;/>&lt;/tns1:productID>&lt;xsl:if test=&quot;ns1:productVersion&quot;>&lt;tns1:productVersion>&lt;xsl:value-of select=&quot;ns1:productVersion&quot;/>&lt;/tns1:productVersion>&lt;/xsl:if>&lt;tns1:quantity>&lt;xsl:value-of select=&quot;ns1:quantity&quot;/>&lt;/tns1:quantity>&lt;tns1:uom>&lt;xsl:value-of select=&quot;ns1:uom&quot;/>&lt;/tns1:uom>&lt;xsl:for-each select=&quot;ns1:deliveryAddress&quot;>&lt;tns1:deliveryAddress>&lt;tns1:line1>&lt;xsl:value-of select=&quot;ns2:line1&quot;/>&lt;/tns1:line1>&lt;xsl:if test=&quot;ns2:line2&quot;>&lt;tns1:line2>&lt;xsl:value-of select=&quot;ns2:line2&quot;/>&lt;/tns1:line2>&lt;/xsl:if>&lt;xsl:if test=&quot;ns2:line3&quot;>&lt;tns1:line3>&lt;xsl:value-of select=&quot;ns2:line3&quot;/>&lt;/tns1:line3>&lt;/xsl:if>&lt;tns1:locality>&lt;xsl:value-of select=&quot;ns2:locality&quot;/>&lt;/tns1:locality>&lt;xsl:if test=&quot;ns2:region&quot;>&lt;tns1:region>&lt;xsl:value-of select=&quot;ns2:region&quot;/>&lt;/tns1:region>&lt;/xsl:if>&lt;tns1:country>&lt;xsl:value-of select=&quot;ns2:country&quot;/>&lt;/tns1:country>&lt;tns1:postCode>&lt;xsl:value-of select=&quot;ns2:postCode&quot;/>&lt;/tns1:postCode>&lt;xsl:if test=&quot;ns2:supplementaryLocation&quot;>&lt;tns1:supplementaryLocation>&lt;xsl:value-of select=&quot;ns2:supplementaryLocation&quot;/>&lt;/tns1:supplementaryLocation>&lt;/xsl:if>&lt;/tns1:deliveryAddress>&lt;/xsl:for-each>&lt;tns1:action>&lt;xsl:value-of select=&quot;ns1:action&quot;/>&lt;/tns1:action>&lt;xsl:if test=&quot;ns1:actionMode&quot;>&lt;tns1:actionMode>&lt;xsl:value-of select=&quot;ns1:actionMode&quot;/>&lt;/tns1:actionMode>&lt;/xsl:if>&lt;xsl:choose>&lt;xsl:when test=&quot;exists(ns1:requiredByDate)&quot;>&lt;xsl:if test=&quot;ns1:requiredByDate&quot;>&lt;tns1:requiredByDate>&lt;xsl:value-of select=&quot;ns1:requiredByDate&quot;/>&lt;/tns1:requiredByDate>&lt;/xsl:if>&lt;/xsl:when>&lt;xsl:otherwise>&lt;xsl:if test=&quot;ns1:requiredOnDate&quot;>&lt;tns1:requiredOnDate>&lt;xsl:value-of select=&quot;ns1:requiredOnDate&quot;/>&lt;/tns1:requiredOnDate>&lt;/xsl:if>&lt;/xsl:otherwise>&lt;/xsl:choose>&lt;xsl:if test=&quot;ns1:linkID&quot;>&lt;tns1:linkID>&lt;xsl:value-of select=&quot;ns1:linkID&quot;/>&lt;/tns1:linkID>&lt;/xsl:if>&lt;xsl:if test=&quot;ns1:inventoryID&quot;>&lt;tns1:inventoryID>&lt;xsl:value-of select=&quot;ns1:inventoryID&quot;/>&lt;/tns1:inventoryID>&lt;/xsl:if>&lt;xsl:if test=&quot;ns1:notes&quot;>&lt;tns1:notes>&lt;xsl:value-of select=&quot;ns1:notes&quot;/>&lt;/tns1:notes>&lt;/xsl:if>&lt;xsl:for-each select=&quot;ns1:slaID&quot;>&lt;tns1:slaID>&lt;xsl:value-of select=&quot;.&quot;/>&lt;/tns1:slaID>&lt;/xsl:for-each>&lt;xsl:for-each select=&quot;ns1:udf&quot;>&lt;tns1:udf>&lt;tns1:name>&lt;xsl:value-of select=&quot;ns1:name&quot;/>&lt;/tns1:name>&lt;tns1:value>&lt;xsl:value-of select=&quot;ns1:value&quot;/>&lt;/tns1:value>&lt;/tns1:udf>&lt;/xsl:for-each>&lt;xsl:for-each select=&quot;ns1:characteristic&quot;>&lt;tns1:characteristic>&lt;tns1:name>&lt;xsl:value-of select=&quot;ns1:name&quot;/>&lt;/tns1:name>&lt;tns1:description>&lt;xsl:value-of select=&quot;ns1:description&quot;/>&lt;/tns1:description>&lt;xsl:for-each select=&quot;ns1:value&quot;>&lt;tns1:value>&lt;tns1:name>&lt;xsl:value-of select=&quot;ns1:name&quot;/>&lt;/tns1:name>&lt;tns1:type>&lt;xsl:value-of select=&quot;ns1:type&quot;/>&lt;/tns1:type>&lt;xsl:if test=&quot;ns1:value&quot;>&lt;tns1:value>&lt;xsl:value-of select=&quot;ns1:value&quot;/>&lt;/tns1:value>&lt;/xsl:if>&lt;xsl:if test=&quot;ns1:valueFrom&quot;>&lt;tns1:valueFrom>&lt;xsl:value-of select=&quot;ns1:valueFrom&quot;/>&lt;/tns1:valueFrom>&lt;/xsl:if>&lt;xsl:if test=&quot;ns1:valueTo&quot;>&lt;tns1:valueTo>&lt;xsl:value-of select=&quot;ns1:valueTo&quot;/>&lt;/tns1:valueTo>&lt;/xsl:if>&lt;/tns1:value>&lt;/xsl:for-each>&lt;/tns1:characteristic>&lt;/xsl:for-each>&lt;xsl:if test=&quot;ns1:customerItemID&quot;>&lt;tns1:customerItemID>&lt;xsl:value-of select=&quot;ns1:customerItemID&quot;/>&lt;/tns1:customerItemID>&lt;/xsl:if>&lt;/tns1:line>&lt;/xsl:for-each>&lt;/tns1:orderRequest>&lt;/xsl:for-each>&lt;/tns1:ValidateOfferResponse>&lt;/xsl:template>&lt;/xsl:stylesheet>"
                    expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xslt1.0"
                    inputVariable="End-input" name="End"
                    tibex:xpdlId="cb2c6303-3480-4d5f-9738-967856e345e5" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                    <bpws:targets>
                        <bpws:target linkName="LogEndToEnd"/>
                    </bpws:targets>
                    <tibex:inputBindings>
                        <tibex:inputBinding
                            expression="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xa;&lt;xsl:stylesheet xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; xmlns:ns=&quot;http://www.tibco.com/aff/offerpriceservice&quot; xmlns:ns1=&quot;http://www.tibco.com/aff/order&quot; xmlns:tns1=&quot;http://it.fastweb.com.org/COM/IntegrationFOM/internal/schema&quot; xmlns:ns1=&quot;http://www.tibco.com/aff/order&quot; xmlns:msg=&quot;http://www.tibco.com/ope/message&quot; xmlns:ns2=&quot;http://www.tibco.com/aff/commontypes&quot; xmlns:tns5=&quot;http://xmlns.example.com/20210208100017PLT&quot; xmlns:ns3=&quot;http://www.tibco.com/aff/orderservice/result&quot; version=&quot;2.0&quot;>&#xa;    &lt;xsl:param name=&quot;InvokeValidateOffer.parameters&quot;/>&#xa;    &lt;xsl:template name=&quot;End-input&quot; match=&quot;/&quot;>&#xa;        &lt;tns1:ValidateOfferResponse>&#xa;            &lt;xsl:if test=&quot;$InvokeValidateOffer.parameters/@BusinessTransactionID&quot;>&#xa;                &lt;xsl:attribute name=&quot;BusinessTransactionID&quot;>&#xa;                    &lt;xsl:value-of select=&quot;$InvokeValidateOffer.parameters/@BusinessTransactionID&quot;/>&#xa;                &lt;/xsl:attribute>&#xa;            &lt;/xsl:if>&#xa;            &lt;xsl:for-each select=&quot;$InvokeValidateOffer.parameters/ns3:resultStatus&quot;>&#xa;                &lt;tns1:resultStatus>&#xa;                    &lt;tns1:deployment>&#xa;                        &lt;xsl:value-of select=&quot;ns3:deployment&quot;/>&#xa;                    &lt;/tns1:deployment>&#xa;                    &lt;tns1:service>&#xa;                        &lt;xsl:value-of select=&quot;ns3:service&quot;/>&#xa;                    &lt;/tns1:service>&#xa;                    &lt;tns1:operation>&#xa;                        &lt;xsl:value-of select=&quot;ns3:operation&quot;/>&#xa;                    &lt;/tns1:operation>&#xa;                    &lt;xsl:if test=&quot;ns3:component&quot;>&#xa;                        &lt;tns1:component>&#xa;                            &lt;xsl:value-of select=&quot;ns3:component&quot;/>&#xa;                        &lt;/tns1:component>&#xa;                    &lt;/xsl:if>&#xa;                    &lt;tns1:severity>&#xa;                        &lt;xsl:value-of select=&quot;ns3:severity&quot;/>&#xa;                    &lt;/tns1:severity>&#xa;                    &lt;tns1:code>&#xa;                        &lt;xsl:value-of select=&quot;ns3:code&quot;/>&#xa;                    &lt;/tns1:code>&#xa;                    &lt;tns1:message>&#xa;                        &lt;xsl:value-of select=&quot;ns3:message&quot;/>&#xa;                    &lt;/tns1:message>&#xa;                &lt;/tns1:resultStatus>&#xa;            &lt;/xsl:for-each>&#xa;            &lt;tns1:ValidationPass>&#xa;                &lt;xsl:value-of select=&quot;$InvokeValidateOffer.parameters/ns:ValidationPass&quot;/>&#xa;            &lt;/tns1:ValidationPass>&#xa;            &lt;xsl:for-each select=&quot;$InvokeValidateOffer.parameters/ns:ValidationResultMessage&quot;>&#xa;                &lt;tns1:ValidationResultMessage>&#xa;                    &lt;xsl:choose>&#xa;                        &lt;xsl:when test=&quot;exists(ns:Linenumber)&quot;>&#xa;                            &lt;tns1:Linenumber>&#xa;                                &lt;xsl:value-of select=&quot;ns:Linenumber&quot;/>&#xa;                            &lt;/tns1:Linenumber>&#xa;                        &lt;/xsl:when>&#xa;                        &lt;xsl:otherwise>&#xa;                            &lt;tns1:Linenumber>&#xa;                                &lt;xsl:value-of select=&quot;ns:InventoryID&quot;/>&#xa;                            &lt;/tns1:Linenumber>&#xa;                        &lt;/xsl:otherwise>&#xa;                    &lt;/xsl:choose>&#xa;                    &lt;tns1:ProductID>&#xa;                        &lt;xsl:value-of select=&quot;ns:ProductID&quot;/>&#xa;                    &lt;/tns1:ProductID>&#xa;                    &lt;xsl:for-each select=&quot;msg:Message&quot;>&#xa;                        &lt;tns1:Message>&#xa;                            &lt;tns1:Code>&#xa;                                &lt;xsl:value-of select=&quot;msg:Code&quot;/>&#xa;                            &lt;/tns1:Code>&#xa;                            &lt;tns1:Type>&#xa;                                &lt;xsl:value-of select=&quot;msg:Type&quot;/>&#xa;                            &lt;/tns1:Type>&#xa;                            &lt;tns1:Details>&#xa;                                &lt;xsl:value-of select=&quot;msg:Details&quot;/>&#xa;                            &lt;/tns1:Details>&#xa;                            &lt;xsl:if test=&quot;msg:CausingItem&quot;>&#xa;                                &lt;tns1:CausingItem>&#xa;                                    &lt;xsl:value-of select=&quot;msg:CausingItem&quot;/>&#xa;                                &lt;/tns1:CausingItem>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;xsl:if test=&quot;msg:CausingItemID&quot;>&#xa;                                &lt;tns1:CausingItemID>&#xa;                                    &lt;xsl:value-of select=&quot;msg:CausingItemID&quot;/>&#xa;                                &lt;/tns1:CausingItemID>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;xsl:if test=&quot;msg:CausingItemPosition&quot;>&#xa;                                &lt;tns1:CausingItemPosition>&#xa;                                    &lt;xsl:value-of select=&quot;msg:CausingItemPosition&quot;/>&#xa;                                &lt;/tns1:CausingItemPosition>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;xsl:if test=&quot;msg:CausingItemPositionID&quot;>&#xa;                                &lt;tns1:CausingItemPositionID>&#xa;                                    &lt;xsl:value-of select=&quot;msg:CausingItemPositionID&quot;/>&#xa;                                &lt;/tns1:CausingItemPositionID>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;xsl:if test=&quot;msg:RuleViolation&quot;>&#xa;                                &lt;tns1:RuleViolation>&#xa;                                    &lt;xsl:value-of select=&quot;msg:RuleViolation&quot;/>&#xa;                                &lt;/tns1:RuleViolation>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;xsl:for-each select=&quot;ns1:udf&quot;>&#xa;                                &lt;tns1:udf>&#xa;                                    &lt;tns1:name>&#xa;                                        &lt;xsl:value-of select=&quot;ns1:name&quot;/>&#xa;                                    &lt;/tns1:name>&#xa;                                    &lt;tns1:value>&#xa;                                        &lt;xsl:value-of select=&quot;ns1:value&quot;/>&#xa;                                    &lt;/tns1:value>&#xa;                                &lt;/tns1:udf>&#xa;                            &lt;/xsl:for-each>&#xa;                        &lt;/tns1:Message>&#xa;                    &lt;/xsl:for-each>&#xa;                &lt;/tns1:ValidationResultMessage>&#xa;            &lt;/xsl:for-each>&#xa;            &lt;xsl:for-each select=&quot;$InvokeValidateOffer.parameters/ns1:orderRequest&quot;>&#xa;                &lt;tns1:orderRequest>&#xa;                    &lt;tns1:orderRef>&#xa;                        &lt;xsl:value-of select=&quot;ns1:orderRef&quot;/>&#xa;                    &lt;/tns1:orderRef>&#xa;                    &lt;tns1:header>&#xa;                        &lt;xsl:if test=&quot;ns1:header/ns1:description&quot;>&#xa;                            &lt;tns1:description>&#xa;                                &lt;xsl:value-of select=&quot;ns1:header/ns1:description&quot;/>&#xa;                            &lt;/tns1:description>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;xsl:choose>&#xa;                            &lt;xsl:when test=&quot;exists(ns1:header/ns1:customerID)&quot;>&#xa;                                &lt;tns1:customerID>&#xa;                                    &lt;xsl:value-of select=&quot;ns1:header/ns1:customerID&quot;/>&#xa;                                &lt;/tns1:customerID>&#xa;                            &lt;/xsl:when>&#xa;                            &lt;xsl:otherwise>&#xa;                                &lt;tns1:customerID>&#xa;                                    &lt;xsl:value-of select=&quot;ns1:header/ns1:subscriberID&quot;/>&#xa;                                &lt;/tns1:customerID>&#xa;                            &lt;/xsl:otherwise>&#xa;                        &lt;/xsl:choose>&#xa;                        &lt;xsl:choose>&#xa;                            &lt;xsl:when test=&quot;exists(ns1:header/ns1:requiredByDate)&quot;>&#xa;                                &lt;xsl:if test=&quot;ns1:header/ns1:requiredByDate&quot;>&#xa;                                    &lt;tns1:requiredByDate>&#xa;                                        &lt;xsl:value-of select=&quot;ns1:header/ns1:requiredByDate&quot;/>&#xa;                                    &lt;/tns1:requiredByDate>&#xa;                                &lt;/xsl:if>&#xa;                            &lt;/xsl:when>&#xa;                            &lt;xsl:otherwise>&#xa;                                &lt;xsl:if test=&quot;ns1:header/ns1:requiredOnDate&quot;>&#xa;                                    &lt;tns1:requiredByDate>&#xa;                                        &lt;xsl:value-of select=&quot;ns1:header/ns1:requiredOnDate&quot;/>&#xa;                                    &lt;/tns1:requiredByDate>&#xa;                                &lt;/xsl:if>&#xa;                            &lt;/xsl:otherwise>&#xa;                        &lt;/xsl:choose>&#xa;                        &lt;xsl:if test=&quot;ns1:header/ns1:orderPriority&quot;>&#xa;                            &lt;tns1:orderPriority>&#xa;                                &lt;xsl:value-of select=&quot;ns1:header/ns1:orderPriority&quot;/>&#xa;                            &lt;/tns1:orderPriority>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;xsl:for-each select=&quot;ns1:header/ns1:invoiceAddress&quot;>&#xa;                            &lt;tns1:invoiceAddress>&#xa;                                &lt;tns1:line1>&#xa;                                    &lt;xsl:value-of select=&quot;ns2:line1&quot;/>&#xa;                                &lt;/tns1:line1>&#xa;                                &lt;xsl:if test=&quot;ns2:line2&quot;>&#xa;                                    &lt;tns1:line2>&#xa;                                        &lt;xsl:value-of select=&quot;ns2:line2&quot;/>&#xa;                                    &lt;/tns1:line2>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;xsl:if test=&quot;ns2:line3&quot;>&#xa;                                    &lt;tns1:line3>&#xa;                                        &lt;xsl:value-of select=&quot;ns2:line3&quot;/>&#xa;                                    &lt;/tns1:line3>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;tns1:locality>&#xa;                                    &lt;xsl:value-of select=&quot;ns2:locality&quot;/>&#xa;                                &lt;/tns1:locality>&#xa;                                &lt;xsl:if test=&quot;ns2:region&quot;>&#xa;                                    &lt;tns1:region>&#xa;                                        &lt;xsl:value-of select=&quot;ns2:region&quot;/>&#xa;                                    &lt;/tns1:region>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;tns1:country>&#xa;                                    &lt;xsl:value-of select=&quot;ns2:country&quot;/>&#xa;                                &lt;/tns1:country>&#xa;                                &lt;tns1:postCode>&#xa;                                    &lt;xsl:value-of select=&quot;ns2:postCode&quot;/>&#xa;                                &lt;/tns1:postCode>&#xa;                                &lt;xsl:if test=&quot;ns2:supplementaryLocation&quot;>&#xa;                                    &lt;tns1:supplementaryLocation>&#xa;                                        &lt;xsl:value-of select=&quot;ns2:supplementaryLocation&quot;/>&#xa;                                    &lt;/tns1:supplementaryLocation>&#xa;                                &lt;/xsl:if>&#xa;                            &lt;/tns1:invoiceAddress>&#xa;                        &lt;/xsl:for-each>&#xa;                        &lt;xsl:for-each select=&quot;ns1:header/ns1:deliveryAddress&quot;>&#xa;                            &lt;tns1:deliveryAddress>&#xa;                                &lt;tns1:line1>&#xa;                                    &lt;xsl:value-of select=&quot;ns2:line1&quot;/>&#xa;                                &lt;/tns1:line1>&#xa;                                &lt;xsl:if test=&quot;ns2:line2&quot;>&#xa;                                    &lt;tns1:line2>&#xa;                                        &lt;xsl:value-of select=&quot;ns2:line2&quot;/>&#xa;                                    &lt;/tns1:line2>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;xsl:if test=&quot;ns2:line3&quot;>&#xa;                                    &lt;tns1:line3>&#xa;                                        &lt;xsl:value-of select=&quot;ns2:line3&quot;/>&#xa;                                    &lt;/tns1:line3>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;tns1:locality>&#xa;                                    &lt;xsl:value-of select=&quot;ns2:locality&quot;/>&#xa;                                &lt;/tns1:locality>&#xa;                                &lt;xsl:if test=&quot;ns2:region&quot;>&#xa;                                    &lt;tns1:region>&#xa;                                        &lt;xsl:value-of select=&quot;ns2:region&quot;/>&#xa;                                    &lt;/tns1:region>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;tns1:country>&#xa;                                    &lt;xsl:value-of select=&quot;ns2:country&quot;/>&#xa;                                &lt;/tns1:country>&#xa;                                &lt;tns1:postCode>&#xa;                                    &lt;xsl:value-of select=&quot;ns2:postCode&quot;/>&#xa;                                &lt;/tns1:postCode>&#xa;                                &lt;xsl:if test=&quot;ns2:supplementaryLocation&quot;>&#xa;                                    &lt;tns1:supplementaryLocation>&#xa;                                        &lt;xsl:value-of select=&quot;ns2:supplementaryLocation&quot;/>&#xa;                                    &lt;/tns1:supplementaryLocation>&#xa;                                &lt;/xsl:if>&#xa;                            &lt;/tns1:deliveryAddress>&#xa;                        &lt;/xsl:for-each>&#xa;                        &lt;xsl:if test=&quot;ns1:header/ns1:notes&quot;>&#xa;                            &lt;tns1:notes>&#xa;                                &lt;xsl:value-of select=&quot;ns1:header/ns1:notes&quot;/>&#xa;                            &lt;/tns1:notes>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;xsl:for-each select=&quot;ns1:header/ns1:slaID&quot;>&#xa;                            &lt;tns1:slaID>&#xa;                                &lt;xsl:value-of select=&quot;.&quot;/>&#xa;                            &lt;/tns1:slaID>&#xa;                        &lt;/xsl:for-each>&#xa;                        &lt;xsl:for-each select=&quot;ns1:header/ns1:udf&quot;>&#xa;                            &lt;tns1:udf>&#xa;                                &lt;tns1:name>&#xa;                                    &lt;xsl:value-of select=&quot;ns1:name&quot;/>&#xa;                                &lt;/tns1:name>&#xa;                                &lt;tns1:value>&#xa;                                    &lt;xsl:value-of select=&quot;ns1:value&quot;/>&#xa;                                &lt;/tns1:value>&#xa;                            &lt;/tns1:udf>&#xa;                        &lt;/xsl:for-each>&#xa;                    &lt;/tns1:header>&#xa;                    &lt;xsl:for-each select=&quot;ns1:line&quot;>&#xa;                        &lt;tns1:line>&#xa;                            &lt;tns1:lineNumber>&#xa;                                &lt;xsl:value-of select=&quot;ns1:lineNumber&quot;/>&#xa;                            &lt;/tns1:lineNumber>&#xa;                            &lt;xsl:if test=&quot;ns1:subscriberID&quot;>&#xa;                                &lt;tns1:subscriberID>&#xa;                                    &lt;xsl:value-of select=&quot;ns1:subscriberID&quot;/>&#xa;                                &lt;/tns1:subscriberID>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;tns1:productID>&#xa;                                &lt;xsl:value-of select=&quot;ns1:productID&quot;/>&#xa;                            &lt;/tns1:productID>&#xa;                            &lt;xsl:if test=&quot;ns1:productVersion&quot;>&#xa;                                &lt;tns1:productVersion>&#xa;                                    &lt;xsl:value-of select=&quot;ns1:productVersion&quot;/>&#xa;                                &lt;/tns1:productVersion>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;tns1:quantity>&#xa;                                &lt;xsl:value-of select=&quot;ns1:quantity&quot;/>&#xa;                            &lt;/tns1:quantity>&#xa;                            &lt;tns1:uom>&#xa;                                &lt;xsl:value-of select=&quot;ns1:uom&quot;/>&#xa;                            &lt;/tns1:uom>&#xa;                            &lt;xsl:for-each select=&quot;ns1:deliveryAddress&quot;>&#xa;                                &lt;tns1:deliveryAddress>&#xa;                                    &lt;tns1:line1>&#xa;                                        &lt;xsl:value-of select=&quot;ns2:line1&quot;/>&#xa;                                    &lt;/tns1:line1>&#xa;                                    &lt;xsl:if test=&quot;ns2:line2&quot;>&#xa;                                        &lt;tns1:line2>&#xa;                                            &lt;xsl:value-of select=&quot;ns2:line2&quot;/>&#xa;                                        &lt;/tns1:line2>&#xa;                                    &lt;/xsl:if>&#xa;                                    &lt;xsl:if test=&quot;ns2:line3&quot;>&#xa;                                        &lt;tns1:line3>&#xa;                                            &lt;xsl:value-of select=&quot;ns2:line3&quot;/>&#xa;                                        &lt;/tns1:line3>&#xa;                                    &lt;/xsl:if>&#xa;                                    &lt;tns1:locality>&#xa;                                        &lt;xsl:value-of select=&quot;ns2:locality&quot;/>&#xa;                                    &lt;/tns1:locality>&#xa;                                    &lt;xsl:if test=&quot;ns2:region&quot;>&#xa;                                        &lt;tns1:region>&#xa;                                            &lt;xsl:value-of select=&quot;ns2:region&quot;/>&#xa;                                        &lt;/tns1:region>&#xa;                                    &lt;/xsl:if>&#xa;                                    &lt;tns1:country>&#xa;                                        &lt;xsl:value-of select=&quot;ns2:country&quot;/>&#xa;                                    &lt;/tns1:country>&#xa;                                    &lt;tns1:postCode>&#xa;                                        &lt;xsl:value-of select=&quot;ns2:postCode&quot;/>&#xa;                                    &lt;/tns1:postCode>&#xa;                                    &lt;xsl:if test=&quot;ns2:supplementaryLocation&quot;>&#xa;                                        &lt;tns1:supplementaryLocation>&#xa;                                            &lt;xsl:value-of select=&quot;ns2:supplementaryLocation&quot;/>&#xa;                                        &lt;/tns1:supplementaryLocation>&#xa;                                    &lt;/xsl:if>&#xa;                                &lt;/tns1:deliveryAddress>&#xa;                            &lt;/xsl:for-each>&#xa;                            &lt;tns1:action>&#xa;                                &lt;xsl:value-of select=&quot;ns1:action&quot;/>&#xa;                            &lt;/tns1:action>&#xa;                            &lt;xsl:if test=&quot;ns1:actionMode&quot;>&#xa;                                &lt;tns1:actionMode>&#xa;                                    &lt;xsl:value-of select=&quot;ns1:actionMode&quot;/>&#xa;                                &lt;/tns1:actionMode>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;xsl:choose>&#xa;                                &lt;xsl:when test=&quot;exists(ns1:requiredByDate)&quot;>&#xa;                                    &lt;xsl:if test=&quot;ns1:requiredByDate&quot;>&#xa;                                        &lt;tns1:requiredByDate>&#xa;                                            &lt;xsl:value-of select=&quot;ns1:requiredByDate&quot;/>&#xa;                                        &lt;/tns1:requiredByDate>&#xa;                                    &lt;/xsl:if>&#xa;                                &lt;/xsl:when>&#xa;                                &lt;xsl:otherwise>&#xa;                                    &lt;xsl:if test=&quot;ns1:requiredOnDate&quot;>&#xa;                                        &lt;tns1:requiredOnDate>&#xa;                                            &lt;xsl:value-of select=&quot;ns1:requiredOnDate&quot;/>&#xa;                                        &lt;/tns1:requiredOnDate>&#xa;                                    &lt;/xsl:if>&#xa;                                &lt;/xsl:otherwise>&#xa;                            &lt;/xsl:choose>&#xa;                            &lt;xsl:if test=&quot;ns1:linkID&quot;>&#xa;                                &lt;tns1:linkID>&#xa;                                    &lt;xsl:value-of select=&quot;ns1:linkID&quot;/>&#xa;                                &lt;/tns1:linkID>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;xsl:if test=&quot;ns1:inventoryID&quot;>&#xa;                                &lt;tns1:inventoryID>&#xa;                                    &lt;xsl:value-of select=&quot;ns1:inventoryID&quot;/>&#xa;                                &lt;/tns1:inventoryID>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;xsl:if test=&quot;ns1:notes&quot;>&#xa;                                &lt;tns1:notes>&#xa;                                    &lt;xsl:value-of select=&quot;ns1:notes&quot;/>&#xa;                                &lt;/tns1:notes>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;xsl:for-each select=&quot;ns1:slaID&quot;>&#xa;                                &lt;tns1:slaID>&#xa;                                    &lt;xsl:value-of select=&quot;.&quot;/>&#xa;                                &lt;/tns1:slaID>&#xa;                            &lt;/xsl:for-each>&#xa;                            &lt;xsl:for-each select=&quot;ns1:udf&quot;>&#xa;                                &lt;tns1:udf>&#xa;                                    &lt;tns1:name>&#xa;                                        &lt;xsl:value-of select=&quot;ns1:name&quot;/>&#xa;                                    &lt;/tns1:name>&#xa;                                    &lt;tns1:value>&#xa;                                        &lt;xsl:value-of select=&quot;ns1:value&quot;/>&#xa;                                    &lt;/tns1:value>&#xa;                                &lt;/tns1:udf>&#xa;                            &lt;/xsl:for-each>&#xa;                            &lt;xsl:for-each select=&quot;ns1:characteristic&quot;>&#xa;                                &lt;tns1:characteristic>&#xa;                                    &lt;tns1:name>&#xa;                                        &lt;xsl:value-of select=&quot;ns1:name&quot;/>&#xa;                                    &lt;/tns1:name>&#xa;                                    &lt;tns1:description>&#xa;                                        &lt;xsl:value-of select=&quot;ns1:description&quot;/>&#xa;                                    &lt;/tns1:description>&#xa;                                    &lt;xsl:for-each select=&quot;ns1:value&quot;>&#xa;                                        &lt;tns1:value>&#xa;                                            &lt;tns1:name>&#xa;                                                &lt;xsl:value-of select=&quot;ns1:name&quot;/>&#xa;                                            &lt;/tns1:name>&#xa;                                            &lt;tns1:type>&#xa;                                                &lt;xsl:value-of select=&quot;ns1:type&quot;/>&#xa;                                            &lt;/tns1:type>&#xa;                                            &lt;xsl:if test=&quot;ns1:value&quot;>&#xa;                                                &lt;tns1:value>&#xa;                                                    &lt;xsl:value-of select=&quot;ns1:value&quot;/>&#xa;                                                &lt;/tns1:value>&#xa;                                            &lt;/xsl:if>&#xa;                                            &lt;xsl:if test=&quot;ns1:valueFrom&quot;>&#xa;                                                &lt;tns1:valueFrom>&#xa;                                                    &lt;xsl:value-of select=&quot;ns1:valueFrom&quot;/>&#xa;                                                &lt;/tns1:valueFrom>&#xa;                                            &lt;/xsl:if>&#xa;                                            &lt;xsl:if test=&quot;ns1:valueTo&quot;>&#xa;                                                &lt;tns1:valueTo>&#xa;                                                    &lt;xsl:value-of select=&quot;ns1:valueTo&quot;/>&#xa;                                                &lt;/tns1:valueTo>&#xa;                                            &lt;/xsl:if>&#xa;                                        &lt;/tns1:value>&#xa;                                    &lt;/xsl:for-each>&#xa;                                &lt;/tns1:characteristic>&#xa;                            &lt;/xsl:for-each>&#xa;                            &lt;xsl:if test=&quot;ns1:customerItemID&quot;>&#xa;                                &lt;tns1:customerItemID>&#xa;                                    &lt;xsl:value-of select=&quot;ns1:customerItemID&quot;/>&#xa;                                &lt;/tns1:customerItemID>&#xa;                            &lt;/xsl:if>&#xa;                        &lt;/tns1:line>&#xa;                    &lt;/xsl:for-each>&#xa;                &lt;/tns1:orderRequest>&#xa;            &lt;/xsl:for-each>&#xa;        &lt;/tns1:ValidateOfferResponse>&#xa;    &lt;/xsl:template>&#xa;&lt;/xsl:stylesheet>" expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xslt1.0"/>
                    </tibex:inputBindings>
                    <tibex:config>
                        <bwext:BWActivity
                            activityTypeID="bw.internal.end"
                            xmlns:activityconfig="http://tns.tibco.com/bw/model/activityconfig"
                            xmlns:bwext="http://tns.tibco.com/bw/model/core/bwext"
                            xmlns:internalactivities="http://ns.tibco.com/bw/core/internalactivity" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                            <activityConfig>
                                <properties name="config" xsi:type="activityconfig:EMFProperty">
                                    <type href="http://ns.tibco.com/bw/core/internalactivity#//End"/>
                                    <value xsi:type="internalactivities:End"/>
                                </properties>
                            </activityConfig>
                        </bwext:BWActivity>
                    </tibex:config>
                </tibex:activityExtension>
            </bpws:extensionActivity>
            <bpws:extensionActivity>
                <tibex:extActivity inputVariable="LogStart-input"
                    name="LogStart" outputVariable="LogStart"
                    tibex:xpdlId="e4ff040c-72d2-47cc-b480-a5de65b9e430"
                    type="bw.generalactivities.callprocess" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                    <bpws:targets>
                        <bpws:target linkName="StartToLogStart"/>
                    </bpws:targets>
                    <bpws:sources>
                        <bpws:source linkName="LogStartToValidateOffer"/>
                    </bpws:sources>
                    <tibex:inputBindings>
                        <tibex:inputBinding coercion=""
                            expression="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xa;&lt;xsl:stylesheet xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; xmlns:tns2=&quot;http://www.tibco.com/commonLog&quot; version=&quot;2.0&quot;>&lt;xsl:template name=&quot;LogStart-input&quot; match=&quot;/&quot;>&lt;tns2:Log>&lt;tns2:Header/>&lt;tns2:Process>&lt;tns2:Phase>&lt;xsl:value-of select=&quot;'START'&quot;/>&lt;/tns2:Phase>&lt;/tns2:Process>&lt;tns2:Input>&lt;tns2:level>&lt;xsl:value-of select=&quot;'DEBUG'&quot;/>&lt;/tns2:level>&lt;tns2:message>&lt;xsl:value-of select=&quot;'Start ValidateOffer Direct'&quot;/>&lt;/tns2:message>&lt;/tns2:Input>&lt;/tns2:Log>&lt;/xsl:template>&lt;/xsl:stylesheet>" expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xslt1.0"/>
                    </tibex:inputBindings>
                    <tibex:CallProcess moduleRef="TOMSharedGlobal"
                        subProcessName="tom.shared.global.integration.log.Log" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions"/>
                </tibex:extActivity>
            </bpws:extensionActivity>
            <bpws:extensionActivity>
                <tibex:extActivity inputVariable="LogEnd-input"
                    name="LogEnd" outputVariable="LogEnd"
                    tibex:xpdlId="736cea89-fbc6-4b0d-994e-52e66d31209e"
                    type="bw.generalactivities.callprocess" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                    <bpws:targets>
                        <bpws:target linkName="ValidateOfferToLogEnd"/>
                    </bpws:targets>
                    <bpws:sources>
                        <bpws:source linkName="LogEndToEnd"/>
                    </bpws:sources>
                    <tibex:inputBindings>
                        <tibex:inputBinding coercion=""
                            expression="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xa;&lt;xsl:stylesheet xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; xmlns:tns2=&quot;http://www.tibco.com/commonLog&quot; version=&quot;2.0&quot;>&lt;xsl:template name=&quot;LogEnd-input&quot; match=&quot;/&quot;>&lt;tns2:Log>&lt;tns2:Header/>&lt;tns2:Process>&lt;tns2:Phase>&lt;xsl:value-of select=&quot;'END'&quot;/>&lt;/tns2:Phase>&lt;/tns2:Process>&lt;tns2:Input>&lt;tns2:level>&lt;xsl:value-of select=&quot;'DEBUG'&quot;/>&lt;/tns2:level>&lt;tns2:message>&lt;xsl:value-of select=&quot;'End ValidateOffer Direct'&quot;/>&lt;/tns2:message>&lt;/tns2:Input>&lt;/tns2:Log>&lt;/xsl:template>&lt;/xsl:stylesheet>" expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xslt1.0"/>
                    </tibex:inputBindings>
                    <tibex:CallProcess moduleRef="TOMSharedGlobal"
                        subProcessName="tom.shared.global.integration.log.Log" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions"/>
                </tibex:extActivity>
            </bpws:extensionActivity>
            <bpws:invoke inputVariable="InvokeValidateOffer-input"
                name="InvokeValidateOffer" operation="ValidateOffer"
                outputVariable="InvokeValidateOffer"
                partnerLink="OfferPriceService"
                portType="ns3:OfferPriceService" tibex:xpdlId="1b81aa72-c4e3-44f5-b781-fc8720936e29">
                <tibex:inputBinding expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xslt1.0">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns1="http://it.fastweb.com.org/COM/IntegrationFOM/internal/schema" xmlns:tns3="http://www.tibco.com/aff/ope/service/soap" xmlns:ns="http://www.tibco.com/aff/offerpriceservice" xmlns:ns1="http://www.tibco.com/aff/order" xmlns:ns5="http://www.tibco.com/ope/segment" xmlns:ns2="http://www.tibco.com/aff/commontypes" version="2.0"&gt;
    &lt;xsl:param name="Start"/&gt;
    &lt;xsl:template name="ValidateOffer-input" match="/"&gt;
        &lt;tns3:ValidateOfferRequestMsg&gt;
            &lt;parameters&gt;
                &lt;ns:ValidateOfferRequest&gt;
                    &lt;xsl:if test="$Start/@BusinessTransactionID"&gt;
                        &lt;xsl:attribute name="BusinessTransactionID"&gt;
                            &lt;xsl:value-of select="$Start/@BusinessTransactionID"/&gt;
                        &lt;/xsl:attribute&gt;
                    &lt;/xsl:if&gt;
                    &lt;xsl:attribute name="CalculateConsequences"&gt;
                        &lt;xsl:value-of select="$Start/@CalculateConsequences"/&gt;
                    &lt;/xsl:attribute&gt;
                    &lt;xsl:for-each select="$Start/tns1:RequestControl"&gt;
                        &lt;ns:RequestControl&gt;
                            &lt;xsl:if test="@basicValidationOnExistingOffer"&gt;
                                &lt;xsl:attribute name="basicValidationOnExistingOffer"&gt;
                                    &lt;xsl:value-of select="@basicValidationOnExistingOffer"/&gt;
                                &lt;/xsl:attribute&gt;
                            &lt;/xsl:if&gt;
                            &lt;xsl:if test="@decomposeProducts"&gt;
                                &lt;xsl:attribute name="decomposeProducts"&gt;
                                    &lt;xsl:value-of select="@decomposeProducts"/&gt;
                                &lt;/xsl:attribute&gt;
                            &lt;/xsl:if&gt;
                            &lt;xsl:if test="@enforceCompatibleSegment"&gt;
                                &lt;xsl:attribute name="enforceCompatibleSegment"&gt;
                                    &lt;xsl:value-of select="@enforceCompatibleSegment"/&gt;
                                &lt;/xsl:attribute&gt;
                            &lt;/xsl:if&gt;
                            &lt;xsl:if test="@skipChildFilterValidation"&gt;
                                &lt;xsl:attribute name="skipChildFilterValidation"&gt;
                                    &lt;xsl:value-of select="@skipChildFilterValidation"/&gt;
                                &lt;/xsl:attribute&gt;
                            &lt;/xsl:if&gt;
                            &lt;xsl:attribute name="validateData"&gt;
                                &lt;xsl:value-of select="@validateData"/&gt;
                            &lt;/xsl:attribute&gt;
                            &lt;xsl:if test="@validateProdDate"&gt;
                                &lt;xsl:attribute name="validateProdDate"&gt;
                                    &lt;xsl:value-of select="@validateProdDate"/&gt;
                                &lt;/xsl:attribute&gt;
                            &lt;/xsl:if&gt;
                            &lt;xsl:if test="@validateProductCompatibility"&gt;
                                &lt;xsl:attribute name="validateProductCompatibility"&gt;
                                    &lt;xsl:value-of select="@validateProductCompatibility"/&gt;
                                &lt;/xsl:attribute&gt;
                            &lt;/xsl:if&gt;
                            &lt;xsl:if test="@validateProductComprisedOfGroups"&gt;
                                &lt;xsl:attribute name="validateProductComprisedOfGroups"&gt;
                                    &lt;xsl:value-of select="@validateProductComprisedOfGroups"/&gt;
                                &lt;/xsl:attribute&gt;
                            &lt;/xsl:if&gt;
                            &lt;xsl:if test="@validateProductRequiredForGroups"&gt;
                                &lt;xsl:attribute name="validateProductRequiredForGroups"&gt;
                                    &lt;xsl:value-of select="@validateProductRequiredForGroups"/&gt;
                                &lt;/xsl:attribute&gt;
                            &lt;/xsl:if&gt;
                            &lt;xsl:if test="@validateSegmentCompatibility"&gt;
                                &lt;xsl:attribute name="validateSegmentCompatibility"&gt;
                                    &lt;xsl:value-of select="@validateSegmentCompatibility"/&gt;
                                &lt;/xsl:attribute&gt;
                            &lt;/xsl:if&gt;
                            &lt;xsl:for-each select="tns1:ReturnProductInformationData"&gt;
                                &lt;ns:ReturnProductInformationData&gt;
                                    &lt;xsl:if test="tns1:ReturnCharacteristicsName"&gt;
                                        &lt;ns:ReturnCharacteristicsName&gt;
                                            &lt;xsl:value-of select="tns1:ReturnCharacteristicsName"/&gt;
                                        &lt;/ns:ReturnCharacteristicsName&gt;
                                    &lt;/xsl:if&gt;
                                    &lt;xsl:if test="tns1:ReturnCharacteristicsDescription"&gt;
                                        &lt;ns:ReturnCharacteristicsDescription&gt;
                                            &lt;xsl:value-of select="tns1:ReturnCharacteristicsDescription"/&gt;
                                        &lt;/ns:ReturnCharacteristicsDescription&gt;
                                    &lt;/xsl:if&gt;
                                    &lt;xsl:if test="tns1:ReturnCharacteristicsValueType"&gt;
                                        &lt;ns:ReturnCharacteristicsValueType&gt;
                                            &lt;xsl:value-of select="tns1:ReturnCharacteristicsValueType"/&gt;
                                        &lt;/ns:ReturnCharacteristicsValueType&gt;
                                    &lt;/xsl:if&gt;
                                    &lt;xsl:if test="tns1:ReturnCharacteristicsDetails"&gt;
                                        &lt;ns:ReturnCharacteristicsDetails&gt;
                                            &lt;xsl:value-of select="tns1:ReturnCharacteristicsDetails"/&gt;
                                        &lt;/ns:ReturnCharacteristicsDetails&gt;
                                    &lt;/xsl:if&gt;
                                &lt;/ns:ReturnProductInformationData&gt;
                            &lt;/xsl:for-each&gt;
                        &lt;/ns:RequestControl&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;xsl:for-each select="$Start/tns1:Segment"&gt;
                        &lt;ns5:Segment&gt;
                            &lt;xsl:for-each select="tns1:Name"&gt;
                                &lt;ns5:Name&gt;
                                    &lt;xsl:value-of select="."/&gt;
                                &lt;/ns5:Name&gt;
                            &lt;/xsl:for-each&gt;
                            &lt;ns5:Type&gt;
                                &lt;xsl:value-of select="tns1:Type"/&gt;
                            &lt;/ns5:Type&gt;
                            &lt;xsl:for-each select="tns1:udf"&gt;
                                &lt;ns1:udf&gt;
                                    &lt;ns1:name&gt;
                                        &lt;xsl:value-of select="tns1:name"/&gt;
                                    &lt;/ns1:name&gt;
                                    &lt;ns1:value&gt;
                                        &lt;xsl:value-of select="tns1:value"/&gt;
                                    &lt;/ns1:value&gt;
                                    &lt;ns1:extension&gt;
                                        &lt;xsl:copy-of select="tns1:extension/ancestor-or-self::*/namespace::node()"/&gt;
                                        &lt;xsl:copy-of select="tns1:extension/@*"/&gt;
                                        &lt;xsl:copy-of select="tns1:extension/node()"/&gt;
                                    &lt;/ns1:extension&gt;
                                &lt;/ns1:udf&gt;
                            &lt;/xsl:for-each&gt;
                        &lt;/ns5:Segment&gt;
                    &lt;/xsl:for-each&gt;
                    &lt;ns1:orderRequest&gt;
                        &lt;ns1:orderRef&gt;
                            &lt;xsl:value-of select="$Start/tns1:orderRequest/tns1:orderRef"/&gt;
                        &lt;/ns1:orderRef&gt;
                        &lt;xsl:for-each select="$Start/tns1:orderRequest/tns1:header"&gt;
                            &lt;ns1:header&gt;
                                &lt;xsl:if test="tns1:description"&gt;
                                    &lt;ns1:description&gt;
                                        &lt;xsl:value-of select="tns1:description"/&gt;
                                    &lt;/ns1:description&gt;
                                &lt;/xsl:if&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="exists(tns1:customerID)"&gt;
                                        &lt;ns1:customerID&gt;
                                            &lt;xsl:value-of select="tns1:customerID"/&gt;
                                        &lt;/ns1:customerID&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;ns1:customerID&gt;
                                            &lt;xsl:value-of select="tns1:subscriberID"/&gt;
                                        &lt;/ns1:customerID&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="exists(tns1:requiredByDate)"&gt;
                                        &lt;xsl:if test="tns1:requiredByDate"&gt;
                                            &lt;ns1:requiredByDate&gt;
                                                &lt;xsl:value-of select="tns1:requiredByDate"/&gt;
                                            &lt;/ns1:requiredByDate&gt;
                                        &lt;/xsl:if&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:if test="tns1:requiredOnDate"&gt;
                                            &lt;ns1:requiredByDate&gt;
                                                &lt;xsl:value-of select="tns1:requiredOnDate"/&gt;
                                            &lt;/ns1:requiredByDate&gt;
                                        &lt;/xsl:if&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                                &lt;xsl:if test="tns1:orderPriority"&gt;
                                    &lt;ns1:orderPriority&gt;
                                        &lt;xsl:value-of select="tns1:orderPriority"/&gt;
                                    &lt;/ns1:orderPriority&gt;
                                &lt;/xsl:if&gt;
                                &lt;xsl:for-each select="tns1:invoiceAddress"&gt;
                                    &lt;ns1:invoiceAddress&gt;
                                        &lt;ns2:line1&gt;
                                            &lt;xsl:value-of select="tns1:line1"/&gt;
                                        &lt;/ns2:line1&gt;
                                        &lt;xsl:if test="tns1:line2"&gt;
                                            &lt;ns2:line2&gt;
                                                &lt;xsl:value-of select="tns1:line2"/&gt;
                                            &lt;/ns2:line2&gt;
                                        &lt;/xsl:if&gt;
                                        &lt;xsl:if test="tns1:line3"&gt;
                                            &lt;ns2:line3&gt;
                                                &lt;xsl:value-of select="tns1:line3"/&gt;
                                            &lt;/ns2:line3&gt;
                                        &lt;/xsl:if&gt;
                                        &lt;ns2:locality&gt;
                                            &lt;xsl:value-of select="tns1:locality"/&gt;
                                        &lt;/ns2:locality&gt;
                                        &lt;xsl:if test="tns1:region"&gt;
                                            &lt;ns2:region&gt;
                                                &lt;xsl:value-of select="tns1:region"/&gt;
                                            &lt;/ns2:region&gt;
                                        &lt;/xsl:if&gt;
                                        &lt;ns2:country&gt;
                                            &lt;xsl:value-of select="tns1:country"/&gt;
                                        &lt;/ns2:country&gt;
                                        &lt;ns2:postCode&gt;
                                            &lt;xsl:value-of select="tns1:postCode"/&gt;
                                        &lt;/ns2:postCode&gt;
                                        &lt;xsl:if test="tns1:supplementaryLocation"&gt;
                                            &lt;ns2:supplementaryLocation&gt;
                                                &lt;xsl:value-of select="tns1:supplementaryLocation"/&gt;
                                            &lt;/ns2:supplementaryLocation&gt;
                                        &lt;/xsl:if&gt;
                                    &lt;/ns1:invoiceAddress&gt;
                                &lt;/xsl:for-each&gt;
                                &lt;xsl:for-each select="tns1:deliveryAddress"&gt;
                                    &lt;ns1:deliveryAddress&gt;
                                        &lt;ns2:line1&gt;
                                            &lt;xsl:value-of select="tns1:line1"/&gt;
                                        &lt;/ns2:line1&gt;
                                        &lt;xsl:if test="tns1:line2"&gt;
                                            &lt;ns2:line2&gt;
                                                &lt;xsl:value-of select="tns1:line2"/&gt;
                                            &lt;/ns2:line2&gt;
                                        &lt;/xsl:if&gt;
                                        &lt;xsl:if test="tns1:line3"&gt;
                                            &lt;ns2:line3&gt;
                                                &lt;xsl:value-of select="tns1:line3"/&gt;
                                            &lt;/ns2:line3&gt;
                                        &lt;/xsl:if&gt;
                                        &lt;ns2:locality&gt;
                                            &lt;xsl:value-of select="tns1:locality"/&gt;
                                        &lt;/ns2:locality&gt;
                                        &lt;xsl:if test="tns1:region"&gt;
                                            &lt;ns2:region&gt;
                                                &lt;xsl:value-of select="tns1:region"/&gt;
                                            &lt;/ns2:region&gt;
                                        &lt;/xsl:if&gt;
                                        &lt;ns2:country&gt;
                                            &lt;xsl:value-of select="tns1:country"/&gt;
                                        &lt;/ns2:country&gt;
                                        &lt;ns2:postCode&gt;
                                            &lt;xsl:value-of select="tns1:postCode"/&gt;
                                        &lt;/ns2:postCode&gt;
                                        &lt;xsl:if test="tns1:supplementaryLocation"&gt;
                                            &lt;ns2:supplementaryLocation&gt;
                                                &lt;xsl:value-of select="tns1:supplementaryLocation"/&gt;
                                            &lt;/ns2:supplementaryLocation&gt;
                                        &lt;/xsl:if&gt;
                                    &lt;/ns1:deliveryAddress&gt;
                                &lt;/xsl:for-each&gt;
                                &lt;xsl:if test="tns1:notes"&gt;
                                    &lt;ns1:notes&gt;
                                        &lt;xsl:value-of select="tns1:notes"/&gt;
                                    &lt;/ns1:notes&gt;
                                &lt;/xsl:if&gt;
                                &lt;xsl:for-each select="tns1:slaID"&gt;
                                    &lt;ns1:slaID&gt;
                                        &lt;xsl:value-of select="."/&gt;
                                    &lt;/ns1:slaID&gt;
                                &lt;/xsl:for-each&gt;
                                &lt;xsl:for-each select="tns1:udf"&gt;
                                    &lt;ns1:udf&gt;
                                        &lt;ns1:name&gt;
                                            &lt;xsl:value-of select="tns1:name"/&gt;
                                        &lt;/ns1:name&gt;
                                        &lt;ns1:value&gt;
                                            &lt;xsl:value-of select="tns1:value"/&gt;
                                        &lt;/ns1:value&gt;
                                        &lt;ns1:extension&gt;
                                            &lt;xsl:copy-of select="tns1:extension/ancestor-or-self::*/namespace::node()"/&gt;
                                            &lt;xsl:copy-of select="tns1:extension/@*"/&gt;
                                            &lt;xsl:copy-of select="tns1:extension/node()"/&gt;
                                        &lt;/ns1:extension&gt;
                                    &lt;/ns1:udf&gt;
                                &lt;/xsl:for-each&gt;
                                &lt;xsl:for-each select="tns1:extension"&gt;
                                    &lt;ns1:extension&gt;
                                        &lt;xsl:copy-of select="*"/&gt;
                                    &lt;/ns1:extension&gt;
                                &lt;/xsl:for-each&gt;
                            &lt;/ns1:header&gt;
                        &lt;/xsl:for-each&gt;
                        &lt;xsl:for-each select="$Start/tns1:orderRequest/tns1:line"&gt;
                            &lt;ns1:line&gt;
                                &lt;ns1:lineNumber&gt;
                                    &lt;xsl:value-of select="tns1:lineNumber"/&gt;
                                &lt;/ns1:lineNumber&gt;
                                &lt;xsl:if test="tns1:subscriberID"&gt;
                                    &lt;ns1:subscriberID&gt;
                                        &lt;xsl:value-of select="tns1:subscriberID"/&gt;
                                    &lt;/ns1:subscriberID&gt;
                                &lt;/xsl:if&gt;
                                &lt;ns1:productID&gt;
                                    &lt;xsl:value-of select="tns1:productID"/&gt;
                                &lt;/ns1:productID&gt;
                                &lt;xsl:if test="tns1:productVersion"&gt;
                                    &lt;ns1:productVersion&gt;
                                        &lt;xsl:value-of select="tns1:productVersion"/&gt;
                                    &lt;/ns1:productVersion&gt;
                                &lt;/xsl:if&gt;
                                &lt;ns1:quantity&gt;
                                    &lt;xsl:value-of select="tns1:quantity"/&gt;
                                &lt;/ns1:quantity&gt;
                                &lt;ns1:uom&gt;
                                    &lt;xsl:value-of select="tns1:uom"/&gt;
                                &lt;/ns1:uom&gt;
                                &lt;xsl:for-each select="tns1:deliveryAddress"&gt;
                                    &lt;ns1:deliveryAddress&gt;
                                        &lt;ns2:line1&gt;
                                            &lt;xsl:value-of select="tns1:line1"/&gt;
                                        &lt;/ns2:line1&gt;
                                        &lt;xsl:if test="tns1:line2"&gt;
                                            &lt;ns2:line2&gt;
                                                &lt;xsl:value-of select="tns1:line2"/&gt;
                                            &lt;/ns2:line2&gt;
                                        &lt;/xsl:if&gt;
                                        &lt;xsl:if test="tns1:line3"&gt;
                                            &lt;ns2:line3&gt;
                                                &lt;xsl:value-of select="tns1:line3"/&gt;
                                            &lt;/ns2:line3&gt;
                                        &lt;/xsl:if&gt;
                                        &lt;ns2:locality&gt;
                                            &lt;xsl:value-of select="tns1:locality"/&gt;
                                        &lt;/ns2:locality&gt;
                                        &lt;xsl:if test="tns1:region"&gt;
                                            &lt;ns2:region&gt;
                                                &lt;xsl:value-of select="tns1:region"/&gt;
                                            &lt;/ns2:region&gt;
                                        &lt;/xsl:if&gt;
                                        &lt;ns2:country&gt;
                                            &lt;xsl:value-of select="tns1:country"/&gt;
                                        &lt;/ns2:country&gt;
                                        &lt;ns2:postCode&gt;
                                            &lt;xsl:value-of select="tns1:postCode"/&gt;
                                        &lt;/ns2:postCode&gt;
                                        &lt;xsl:if test="tns1:supplementaryLocation"&gt;
                                            &lt;ns2:supplementaryLocation&gt;
                                                &lt;xsl:value-of select="tns1:supplementaryLocation"/&gt;
                                            &lt;/ns2:supplementaryLocation&gt;
                                        &lt;/xsl:if&gt;
                                    &lt;/ns1:deliveryAddress&gt;
                                &lt;/xsl:for-each&gt;
                                &lt;ns1:action&gt;
                                    &lt;xsl:value-of select="tns1:action"/&gt;
                                &lt;/ns1:action&gt;
                                &lt;xsl:if test="tns1:actionMode"&gt;
                                    &lt;ns1:actionMode&gt;
                                        &lt;xsl:value-of select="tns1:actionMode"/&gt;
                                    &lt;/ns1:actionMode&gt;
                                &lt;/xsl:if&gt;
                                &lt;xsl:choose&gt;
                                    &lt;xsl:when test="exists(tns1:requiredByDate)"&gt;
                                        &lt;xsl:if test="tns1:requiredByDate"&gt;
                                            &lt;ns1:requiredByDate&gt;
                                                &lt;xsl:value-of select="tns1:requiredByDate"/&gt;
                                            &lt;/ns1:requiredByDate&gt;
                                        &lt;/xsl:if&gt;
                                    &lt;/xsl:when&gt;
                                    &lt;xsl:otherwise&gt;
                                        &lt;xsl:if test="tns1:requiredOnDate"&gt;
                                            &lt;ns1:requiredByDate&gt;
                                                &lt;xsl:value-of select="tns1:requiredOnDate"/&gt;
                                            &lt;/ns1:requiredByDate&gt;
                                        &lt;/xsl:if&gt;
                                    &lt;/xsl:otherwise&gt;
                                &lt;/xsl:choose&gt;
                                &lt;xsl:if test="tns1:linkID"&gt;
                                    &lt;ns1:linkID&gt;
                                        &lt;xsl:value-of select="tns1:linkID"/&gt;
                                    &lt;/ns1:linkID&gt;
                                &lt;/xsl:if&gt;
                                &lt;xsl:if test="tns1:inventoryID"&gt;
                                    &lt;ns1:inventoryID&gt;
                                        &lt;xsl:value-of select="tns1:inventoryID"/&gt;
                                    &lt;/ns1:inventoryID&gt;
                                &lt;/xsl:if&gt;
                                &lt;xsl:if test="tns1:notes"&gt;
                                    &lt;ns1:notes&gt;
                                        &lt;xsl:value-of select="tns1:notes"/&gt;
                                    &lt;/ns1:notes&gt;
                                &lt;/xsl:if&gt;
                                &lt;xsl:for-each select="tns1:slaID"&gt;
                                    &lt;ns1:slaID&gt;
                                        &lt;xsl:value-of select="."/&gt;
                                    &lt;/ns1:slaID&gt;
                                &lt;/xsl:for-each&gt;
                                &lt;xsl:for-each select="tns1:udf"&gt;
                                    &lt;ns1:udf&gt;
                                        &lt;ns1:name&gt;
                                            &lt;xsl:value-of select="tns1:name"/&gt;
                                        &lt;/ns1:name&gt;
                                        &lt;ns1:value&gt;
                                            &lt;xsl:value-of select="tns1:value"/&gt;
                                        &lt;/ns1:value&gt;
                                        &lt;xsl:for-each select="tns1:extension"&gt;
                                            &lt;ns1:extension&gt;
                                                &lt;xsl:copy-of select="*"/&gt;
                                            &lt;/ns1:extension&gt;
                                        &lt;/xsl:for-each&gt;
                                    &lt;/ns1:udf&gt;
                                &lt;/xsl:for-each&gt;
                                &lt;xsl:for-each select="tns1:characteristic"&gt;
                                    &lt;ns1:characteristic&gt;
                                        &lt;ns1:name&gt;
                                            &lt;xsl:value-of select="tns1:name"/&gt;
                                        &lt;/ns1:name&gt;
                                        &lt;ns1:description&gt;
                                            &lt;xsl:value-of select="tns1:description"/&gt;
                                        &lt;/ns1:description&gt;
                                        &lt;xsl:for-each select="tns1:value"&gt;
                                            &lt;ns1:value&gt;
                                                &lt;ns1:name&gt;
                                                    &lt;xsl:value-of select="tns1:name"/&gt;
                                                &lt;/ns1:name&gt;
                                                &lt;ns1:type&gt;
                                                    &lt;xsl:value-of select="tns1:type"/&gt;
                                                &lt;/ns1:type&gt;
                                                &lt;xsl:if test="tns1:value"&gt;
                                                    &lt;ns1:value&gt;
                                                        &lt;xsl:value-of select="tns1:value"/&gt;
                                                    &lt;/ns1:value&gt;
                                                &lt;/xsl:if&gt;
                                                &lt;xsl:if test="tns1:valueFrom"&gt;
                                                    &lt;ns1:valueFrom&gt;
                                                        &lt;xsl:value-of select="tns1:valueFrom"/&gt;
                                                    &lt;/ns1:valueFrom&gt;
                                                &lt;/xsl:if&gt;
                                                &lt;xsl:if test="tns1:valueTo"&gt;
                                                    &lt;ns1:valueTo&gt;
                                                        &lt;xsl:value-of select="tns1:valueTo"/&gt;
                                                    &lt;/ns1:valueTo&gt;
                                                &lt;/xsl:if&gt;
                                                &lt;xsl:for-each select="tns1:extension"&gt;
                                                    &lt;ns1:extension&gt;
                                                        &lt;xsl:copy-of select="*"/&gt;
                                                    &lt;/ns1:extension&gt;
                                                &lt;/xsl:for-each&gt;
                                            &lt;/ns1:value&gt;
                                        &lt;/xsl:for-each&gt;
                                        &lt;xsl:for-each select="tns1:extension"&gt;
                                            &lt;ns1:extension&gt;
                                                &lt;xsl:copy-of select="*"/&gt;
                                            &lt;/ns1:extension&gt;
                                        &lt;/xsl:for-each&gt;
                                    &lt;/ns1:characteristic&gt;
                                &lt;/xsl:for-each&gt;
                                &lt;xsl:if test="tns1:customerItemID"&gt;
                                    &lt;ns1:customerItemID&gt;
                                        &lt;xsl:value-of select="tns1:customerItemID"/&gt;
                                    &lt;/ns1:customerItemID&gt;
                                &lt;/xsl:if&gt;
                                &lt;xsl:for-each select="tns1:extension"&gt;
                                    &lt;ns1:extension&gt;
                                        &lt;xsl:copy-of select="*"/&gt;
                                    &lt;/ns1:extension&gt;
                                &lt;/xsl:for-each&gt;
                            &lt;/ns1:line&gt;
                        &lt;/xsl:for-each&gt;
                        &lt;xsl:for-each select="$Start/tns1:orderRequest/tns1:extension"&gt;
                            &lt;ns1:extension&gt;
                                &lt;xsl:copy-of select="*"/&gt;
                            &lt;/ns1:extension&gt;
                        &lt;/xsl:for-each&gt;
                    &lt;/ns1:orderRequest&gt;
                &lt;/ns:ValidateOfferRequest&gt;
            &lt;/parameters&gt;
        &lt;/tns3:ValidateOfferRequestMsg&gt;
    &lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</tibex:inputBinding>
                <tibex:inputBindings>
                    <tibex:partBinding
                        expression="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>&#xa;&lt;xsl:stylesheet xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot; xmlns:tns1=&quot;http://it.fastweb.com.org/COM/IntegrationFOM/internal/schema&quot; xmlns:tns3=&quot;http://www.tibco.com/aff/ope/service/soap&quot; xmlns:ns=&quot;http://www.tibco.com/aff/offerpriceservice&quot; xmlns:ns1=&quot;http://www.tibco.com/aff/order&quot; xmlns:ns5=&quot;http://www.tibco.com/ope/segment&quot; xmlns:ns2=&quot;http://www.tibco.com/aff/commontypes&quot; version=&quot;2.0&quot;>&#xa;    &lt;xsl:param name=&quot;Start&quot;/>&#xa;    &lt;xsl:template name=&quot;ValidateOffer-input&quot; match=&quot;/&quot;>&#xa;        &lt;ns:ValidateOfferRequest>&#xa;            &lt;xsl:if test=&quot;$Start/@BusinessTransactionID&quot;>&#xa;                &lt;xsl:attribute name=&quot;BusinessTransactionID&quot;>&#xa;                    &lt;xsl:value-of select=&quot;$Start/@BusinessTransactionID&quot;/>&#xa;                &lt;/xsl:attribute>&#xa;            &lt;/xsl:if>&#xa;            &lt;xsl:attribute name=&quot;CalculateConsequences&quot;>&#xa;                &lt;xsl:value-of select=&quot;$Start/@CalculateConsequences&quot;/>&#xa;            &lt;/xsl:attribute>&#xa;            &lt;xsl:for-each select=&quot;$Start/tns1:RequestControl&quot;>&#xa;                &lt;ns:RequestControl>&#xa;                    &lt;xsl:if test=&quot;@basicValidationOnExistingOffer&quot;>&#xa;                        &lt;xsl:attribute name=&quot;basicValidationOnExistingOffer&quot;>&#xa;                            &lt;xsl:value-of select=&quot;@basicValidationOnExistingOffer&quot;/>&#xa;                        &lt;/xsl:attribute>&#xa;                    &lt;/xsl:if>&#xa;                    &lt;xsl:if test=&quot;@decomposeProducts&quot;>&#xa;                        &lt;xsl:attribute name=&quot;decomposeProducts&quot;>&#xa;                            &lt;xsl:value-of select=&quot;@decomposeProducts&quot;/>&#xa;                        &lt;/xsl:attribute>&#xa;                    &lt;/xsl:if>&#xa;                    &lt;xsl:if test=&quot;@enforceCompatibleSegment&quot;>&#xa;                        &lt;xsl:attribute name=&quot;enforceCompatibleSegment&quot;>&#xa;                            &lt;xsl:value-of select=&quot;@enforceCompatibleSegment&quot;/>&#xa;                        &lt;/xsl:attribute>&#xa;                    &lt;/xsl:if>&#xa;                    &lt;xsl:if test=&quot;@skipChildFilterValidation&quot;>&#xa;                        &lt;xsl:attribute name=&quot;skipChildFilterValidation&quot;>&#xa;                            &lt;xsl:value-of select=&quot;@skipChildFilterValidation&quot;/>&#xa;                        &lt;/xsl:attribute>&#xa;                    &lt;/xsl:if>&#xa;                    &lt;xsl:attribute name=&quot;validateData&quot;>&#xa;                        &lt;xsl:value-of select=&quot;@validateData&quot;/>&#xa;                    &lt;/xsl:attribute>&#xa;                    &lt;xsl:if test=&quot;@validateProdDate&quot;>&#xa;                        &lt;xsl:attribute name=&quot;validateProdDate&quot;>&#xa;                            &lt;xsl:value-of select=&quot;@validateProdDate&quot;/>&#xa;                        &lt;/xsl:attribute>&#xa;                    &lt;/xsl:if>&#xa;                    &lt;xsl:if test=&quot;@validateProductCompatibility&quot;>&#xa;                        &lt;xsl:attribute name=&quot;validateProductCompatibility&quot;>&#xa;                            &lt;xsl:value-of select=&quot;@validateProductCompatibility&quot;/>&#xa;                        &lt;/xsl:attribute>&#xa;                    &lt;/xsl:if>&#xa;                    &lt;xsl:if test=&quot;@validateProductComprisedOfGroups&quot;>&#xa;                        &lt;xsl:attribute name=&quot;validateProductComprisedOfGroups&quot;>&#xa;                            &lt;xsl:value-of select=&quot;@validateProductComprisedOfGroups&quot;/>&#xa;                        &lt;/xsl:attribute>&#xa;                    &lt;/xsl:if>&#xa;                    &lt;xsl:if test=&quot;@validateProductRequiredForGroups&quot;>&#xa;                        &lt;xsl:attribute name=&quot;validateProductRequiredForGroups&quot;>&#xa;                            &lt;xsl:value-of select=&quot;@validateProductRequiredForGroups&quot;/>&#xa;                        &lt;/xsl:attribute>&#xa;                    &lt;/xsl:if>&#xa;                    &lt;xsl:if test=&quot;@validateSegmentCompatibility&quot;>&#xa;                        &lt;xsl:attribute name=&quot;validateSegmentCompatibility&quot;>&#xa;                            &lt;xsl:value-of select=&quot;@validateSegmentCompatibility&quot;/>&#xa;                        &lt;/xsl:attribute>&#xa;                    &lt;/xsl:if>&#xa;                    &lt;xsl:for-each select=&quot;tns1:ReturnProductInformationData&quot;>&#xa;                        &lt;ns:ReturnProductInformationData>&#xa;                            &lt;xsl:if test=&quot;tns1:ReturnCharacteristicsName&quot;>&#xa;                                &lt;ns:ReturnCharacteristicsName>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:ReturnCharacteristicsName&quot;/>&#xa;                                &lt;/ns:ReturnCharacteristicsName>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;xsl:if test=&quot;tns1:ReturnCharacteristicsDescription&quot;>&#xa;                                &lt;ns:ReturnCharacteristicsDescription>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:ReturnCharacteristicsDescription&quot;/>&#xa;                                &lt;/ns:ReturnCharacteristicsDescription>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;xsl:if test=&quot;tns1:ReturnCharacteristicsValueType&quot;>&#xa;                                &lt;ns:ReturnCharacteristicsValueType>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:ReturnCharacteristicsValueType&quot;/>&#xa;                                &lt;/ns:ReturnCharacteristicsValueType>&#xa;                            &lt;/xsl:if>&#xa;                            &lt;xsl:if test=&quot;tns1:ReturnCharacteristicsDetails&quot;>&#xa;                                &lt;ns:ReturnCharacteristicsDetails>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:ReturnCharacteristicsDetails&quot;/>&#xa;                                &lt;/ns:ReturnCharacteristicsDetails>&#xa;                            &lt;/xsl:if>&#xa;                        &lt;/ns:ReturnProductInformationData>&#xa;                    &lt;/xsl:for-each>&#xa;                &lt;/ns:RequestControl>&#xa;            &lt;/xsl:for-each>&#xa;            &lt;xsl:for-each select=&quot;$Start/tns1:Segment&quot;>&#xa;                &lt;ns5:Segment>&#xa;                    &lt;xsl:for-each select=&quot;tns1:Name&quot;>&#xa;                        &lt;ns5:Name>&#xa;                            &lt;xsl:value-of select=&quot;.&quot;/>&#xa;                        &lt;/ns5:Name>&#xa;                    &lt;/xsl:for-each>&#xa;                    &lt;ns5:Type>&#xa;                        &lt;xsl:value-of select=&quot;tns1:Type&quot;/>&#xa;                    &lt;/ns5:Type>&#xa;                    &lt;xsl:for-each select=&quot;tns1:udf&quot;>&#xa;                        &lt;ns1:udf>&#xa;                            &lt;ns1:name>&#xa;                                &lt;xsl:value-of select=&quot;tns1:name&quot;/>&#xa;                            &lt;/ns1:name>&#xa;                            &lt;ns1:value>&#xa;                                &lt;xsl:value-of select=&quot;tns1:value&quot;/>&#xa;                            &lt;/ns1:value>&#xa;                            &lt;ns1:extension>&#xa;                                &lt;xsl:copy-of select=&quot;tns1:extension/ancestor-or-self::*/namespace::node()&quot;/>&#xa;                                &lt;xsl:copy-of select=&quot;tns1:extension/@*&quot;/>&#xa;                                &lt;xsl:copy-of select=&quot;tns1:extension/node()&quot;/>&#xa;                            &lt;/ns1:extension>&#xa;                        &lt;/ns1:udf>&#xa;                    &lt;/xsl:for-each>&#xa;                &lt;/ns5:Segment>&#xa;            &lt;/xsl:for-each>&#xa;            &lt;ns1:orderRequest>&#xa;                &lt;ns1:orderRef>&#xa;                    &lt;xsl:value-of select=&quot;$Start/tns1:orderRequest/tns1:orderRef&quot;/>&#xa;                &lt;/ns1:orderRef>&#xa;                &lt;xsl:for-each select=&quot;$Start/tns1:orderRequest/tns1:header&quot;>&#xa;                    &lt;ns1:header>&#xa;                        &lt;xsl:if test=&quot;tns1:description&quot;>&#xa;                            &lt;ns1:description>&#xa;                                &lt;xsl:value-of select=&quot;tns1:description&quot;/>&#xa;                            &lt;/ns1:description>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;xsl:choose>&#xa;                            &lt;xsl:when test=&quot;exists(tns1:customerID)&quot;>&#xa;                                &lt;ns1:customerID>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:customerID&quot;/>&#xa;                                &lt;/ns1:customerID>&#xa;                            &lt;/xsl:when>&#xa;                            &lt;xsl:otherwise>&#xa;                                &lt;ns1:customerID>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:subscriberID&quot;/>&#xa;                                &lt;/ns1:customerID>&#xa;                            &lt;/xsl:otherwise>&#xa;                        &lt;/xsl:choose>&#xa;                        &lt;xsl:choose>&#xa;                            &lt;xsl:when test=&quot;exists(tns1:requiredByDate)&quot;>&#xa;                                &lt;xsl:if test=&quot;tns1:requiredByDate&quot;>&#xa;                                    &lt;ns1:requiredByDate>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:requiredByDate&quot;/>&#xa;                                    &lt;/ns1:requiredByDate>&#xa;                                &lt;/xsl:if>&#xa;                            &lt;/xsl:when>&#xa;                            &lt;xsl:otherwise>&#xa;                                &lt;xsl:if test=&quot;tns1:requiredOnDate&quot;>&#xa;                                    &lt;ns1:requiredByDate>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:requiredOnDate&quot;/>&#xa;                                    &lt;/ns1:requiredByDate>&#xa;                                &lt;/xsl:if>&#xa;                            &lt;/xsl:otherwise>&#xa;                        &lt;/xsl:choose>&#xa;                        &lt;xsl:if test=&quot;tns1:orderPriority&quot;>&#xa;                            &lt;ns1:orderPriority>&#xa;                                &lt;xsl:value-of select=&quot;tns1:orderPriority&quot;/>&#xa;                            &lt;/ns1:orderPriority>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;xsl:for-each select=&quot;tns1:invoiceAddress&quot;>&#xa;                            &lt;ns1:invoiceAddress>&#xa;                                &lt;ns2:line1>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:line1&quot;/>&#xa;                                &lt;/ns2:line1>&#xa;                                &lt;xsl:if test=&quot;tns1:line2&quot;>&#xa;                                    &lt;ns2:line2>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:line2&quot;/>&#xa;                                    &lt;/ns2:line2>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;xsl:if test=&quot;tns1:line3&quot;>&#xa;                                    &lt;ns2:line3>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:line3&quot;/>&#xa;                                    &lt;/ns2:line3>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;ns2:locality>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:locality&quot;/>&#xa;                                &lt;/ns2:locality>&#xa;                                &lt;xsl:if test=&quot;tns1:region&quot;>&#xa;                                    &lt;ns2:region>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:region&quot;/>&#xa;                                    &lt;/ns2:region>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;ns2:country>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:country&quot;/>&#xa;                                &lt;/ns2:country>&#xa;                                &lt;ns2:postCode>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:postCode&quot;/>&#xa;                                &lt;/ns2:postCode>&#xa;                                &lt;xsl:if test=&quot;tns1:supplementaryLocation&quot;>&#xa;                                    &lt;ns2:supplementaryLocation>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:supplementaryLocation&quot;/>&#xa;                                    &lt;/ns2:supplementaryLocation>&#xa;                                &lt;/xsl:if>&#xa;                            &lt;/ns1:invoiceAddress>&#xa;                        &lt;/xsl:for-each>&#xa;                        &lt;xsl:for-each select=&quot;tns1:deliveryAddress&quot;>&#xa;                            &lt;ns1:deliveryAddress>&#xa;                                &lt;ns2:line1>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:line1&quot;/>&#xa;                                &lt;/ns2:line1>&#xa;                                &lt;xsl:if test=&quot;tns1:line2&quot;>&#xa;                                    &lt;ns2:line2>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:line2&quot;/>&#xa;                                    &lt;/ns2:line2>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;xsl:if test=&quot;tns1:line3&quot;>&#xa;                                    &lt;ns2:line3>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:line3&quot;/>&#xa;                                    &lt;/ns2:line3>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;ns2:locality>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:locality&quot;/>&#xa;                                &lt;/ns2:locality>&#xa;                                &lt;xsl:if test=&quot;tns1:region&quot;>&#xa;                                    &lt;ns2:region>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:region&quot;/>&#xa;                                    &lt;/ns2:region>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;ns2:country>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:country&quot;/>&#xa;                                &lt;/ns2:country>&#xa;                                &lt;ns2:postCode>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:postCode&quot;/>&#xa;                                &lt;/ns2:postCode>&#xa;                                &lt;xsl:if test=&quot;tns1:supplementaryLocation&quot;>&#xa;                                    &lt;ns2:supplementaryLocation>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:supplementaryLocation&quot;/>&#xa;                                    &lt;/ns2:supplementaryLocation>&#xa;                                &lt;/xsl:if>&#xa;                            &lt;/ns1:deliveryAddress>&#xa;                        &lt;/xsl:for-each>&#xa;                        &lt;xsl:if test=&quot;tns1:notes&quot;>&#xa;                            &lt;ns1:notes>&#xa;                                &lt;xsl:value-of select=&quot;tns1:notes&quot;/>&#xa;                            &lt;/ns1:notes>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;xsl:for-each select=&quot;tns1:slaID&quot;>&#xa;                            &lt;ns1:slaID>&#xa;                                &lt;xsl:value-of select=&quot;.&quot;/>&#xa;                            &lt;/ns1:slaID>&#xa;                        &lt;/xsl:for-each>&#xa;                        &lt;xsl:for-each select=&quot;tns1:udf&quot;>&#xa;                            &lt;ns1:udf>&#xa;                                &lt;ns1:name>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:name&quot;/>&#xa;                                &lt;/ns1:name>&#xa;                                &lt;ns1:value>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:value&quot;/>&#xa;                                &lt;/ns1:value>&#xa;                                &lt;ns1:extension>&#xa;                                    &lt;xsl:copy-of select=&quot;tns1:extension/ancestor-or-self::*/namespace::node()&quot;/>&#xa;                                    &lt;xsl:copy-of select=&quot;tns1:extension/@*&quot;/>&#xa;                                    &lt;xsl:copy-of select=&quot;tns1:extension/node()&quot;/>&#xa;                                &lt;/ns1:extension>&#xa;                            &lt;/ns1:udf>&#xa;                        &lt;/xsl:for-each>&#xa;                        &lt;xsl:for-each select=&quot;tns1:extension&quot;>&#xa;                            &lt;ns1:extension>&#xa;                                &lt;xsl:copy-of select=&quot;*&quot;/>&#xa;                            &lt;/ns1:extension>&#xa;                        &lt;/xsl:for-each>&#xa;                    &lt;/ns1:header>&#xa;                &lt;/xsl:for-each>&#xa;                &lt;xsl:for-each select=&quot;$Start/tns1:orderRequest/tns1:line&quot;>&#xa;                    &lt;ns1:line>&#xa;                        &lt;ns1:lineNumber>&#xa;                            &lt;xsl:value-of select=&quot;tns1:lineNumber&quot;/>&#xa;                        &lt;/ns1:lineNumber>&#xa;                        &lt;xsl:if test=&quot;tns1:subscriberID&quot;>&#xa;                            &lt;ns1:subscriberID>&#xa;                                &lt;xsl:value-of select=&quot;tns1:subscriberID&quot;/>&#xa;                            &lt;/ns1:subscriberID>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;ns1:productID>&#xa;                            &lt;xsl:value-of select=&quot;tns1:productID&quot;/>&#xa;                        &lt;/ns1:productID>&#xa;                        &lt;xsl:if test=&quot;tns1:productVersion&quot;>&#xa;                            &lt;ns1:productVersion>&#xa;                                &lt;xsl:value-of select=&quot;tns1:productVersion&quot;/>&#xa;                            &lt;/ns1:productVersion>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;ns1:quantity>&#xa;                            &lt;xsl:value-of select=&quot;tns1:quantity&quot;/>&#xa;                        &lt;/ns1:quantity>&#xa;                        &lt;ns1:uom>&#xa;                            &lt;xsl:value-of select=&quot;tns1:uom&quot;/>&#xa;                        &lt;/ns1:uom>&#xa;                        &lt;xsl:for-each select=&quot;tns1:deliveryAddress&quot;>&#xa;                            &lt;ns1:deliveryAddress>&#xa;                                &lt;ns2:line1>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:line1&quot;/>&#xa;                                &lt;/ns2:line1>&#xa;                                &lt;xsl:if test=&quot;tns1:line2&quot;>&#xa;                                    &lt;ns2:line2>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:line2&quot;/>&#xa;                                    &lt;/ns2:line2>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;xsl:if test=&quot;tns1:line3&quot;>&#xa;                                    &lt;ns2:line3>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:line3&quot;/>&#xa;                                    &lt;/ns2:line3>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;ns2:locality>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:locality&quot;/>&#xa;                                &lt;/ns2:locality>&#xa;                                &lt;xsl:if test=&quot;tns1:region&quot;>&#xa;                                    &lt;ns2:region>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:region&quot;/>&#xa;                                    &lt;/ns2:region>&#xa;                                &lt;/xsl:if>&#xa;                                &lt;ns2:country>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:country&quot;/>&#xa;                                &lt;/ns2:country>&#xa;                                &lt;ns2:postCode>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:postCode&quot;/>&#xa;                                &lt;/ns2:postCode>&#xa;                                &lt;xsl:if test=&quot;tns1:supplementaryLocation&quot;>&#xa;                                    &lt;ns2:supplementaryLocation>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:supplementaryLocation&quot;/>&#xa;                                    &lt;/ns2:supplementaryLocation>&#xa;                                &lt;/xsl:if>&#xa;                            &lt;/ns1:deliveryAddress>&#xa;                        &lt;/xsl:for-each>&#xa;                        &lt;ns1:action>&#xa;                            &lt;xsl:value-of select=&quot;tns1:action&quot;/>&#xa;                        &lt;/ns1:action>&#xa;                        &lt;xsl:if test=&quot;tns1:actionMode&quot;>&#xa;                            &lt;ns1:actionMode>&#xa;                                &lt;xsl:value-of select=&quot;tns1:actionMode&quot;/>&#xa;                            &lt;/ns1:actionMode>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;xsl:choose>&#xa;                            &lt;xsl:when test=&quot;exists(tns1:requiredByDate)&quot;>&#xa;                                &lt;xsl:if test=&quot;tns1:requiredByDate&quot;>&#xa;                                    &lt;ns1:requiredByDate>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:requiredByDate&quot;/>&#xa;                                    &lt;/ns1:requiredByDate>&#xa;                                &lt;/xsl:if>&#xa;                            &lt;/xsl:when>&#xa;                            &lt;xsl:otherwise>&#xa;                                &lt;xsl:if test=&quot;tns1:requiredOnDate&quot;>&#xa;                                    &lt;ns1:requiredByDate>&#xa;                                        &lt;xsl:value-of select=&quot;tns1:requiredOnDate&quot;/>&#xa;                                    &lt;/ns1:requiredByDate>&#xa;                                &lt;/xsl:if>&#xa;                            &lt;/xsl:otherwise>&#xa;                        &lt;/xsl:choose>&#xa;                        &lt;xsl:if test=&quot;tns1:linkID&quot;>&#xa;                            &lt;ns1:linkID>&#xa;                                &lt;xsl:value-of select=&quot;tns1:linkID&quot;/>&#xa;                            &lt;/ns1:linkID>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;xsl:if test=&quot;tns1:inventoryID&quot;>&#xa;                            &lt;ns1:inventoryID>&#xa;                                &lt;xsl:value-of select=&quot;tns1:inventoryID&quot;/>&#xa;                            &lt;/ns1:inventoryID>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;xsl:if test=&quot;tns1:notes&quot;>&#xa;                            &lt;ns1:notes>&#xa;                                &lt;xsl:value-of select=&quot;tns1:notes&quot;/>&#xa;                            &lt;/ns1:notes>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;xsl:for-each select=&quot;tns1:slaID&quot;>&#xa;                            &lt;ns1:slaID>&#xa;                                &lt;xsl:value-of select=&quot;.&quot;/>&#xa;                            &lt;/ns1:slaID>&#xa;                        &lt;/xsl:for-each>&#xa;                        &lt;xsl:for-each select=&quot;tns1:udf&quot;>&#xa;                            &lt;ns1:udf>&#xa;                                &lt;ns1:name>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:name&quot;/>&#xa;                                &lt;/ns1:name>&#xa;                                &lt;ns1:value>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:value&quot;/>&#xa;                                &lt;/ns1:value>&#xa;                                &lt;xsl:for-each select=&quot;tns1:extension&quot;>&#xa;                                    &lt;ns1:extension>&#xa;                                        &lt;xsl:copy-of select=&quot;*&quot;/>&#xa;                                    &lt;/ns1:extension>&#xa;                                &lt;/xsl:for-each>&#xa;                            &lt;/ns1:udf>&#xa;                        &lt;/xsl:for-each>&#xa;                        &lt;xsl:for-each select=&quot;tns1:characteristic&quot;>&#xa;                            &lt;ns1:characteristic>&#xa;                                &lt;ns1:name>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:name&quot;/>&#xa;                                &lt;/ns1:name>&#xa;                                &lt;ns1:description>&#xa;                                    &lt;xsl:value-of select=&quot;tns1:description&quot;/>&#xa;                                &lt;/ns1:description>&#xa;                                &lt;xsl:for-each select=&quot;tns1:value&quot;>&#xa;                                    &lt;ns1:value>&#xa;                                        &lt;ns1:name>&#xa;                                            &lt;xsl:value-of select=&quot;tns1:name&quot;/>&#xa;                                        &lt;/ns1:name>&#xa;                                        &lt;ns1:type>&#xa;                                            &lt;xsl:value-of select=&quot;tns1:type&quot;/>&#xa;                                        &lt;/ns1:type>&#xa;                                        &lt;xsl:if test=&quot;tns1:value&quot;>&#xa;                                            &lt;ns1:value>&#xa;                                                &lt;xsl:value-of select=&quot;tns1:value&quot;/>&#xa;                                            &lt;/ns1:value>&#xa;                                        &lt;/xsl:if>&#xa;                                        &lt;xsl:if test=&quot;tns1:valueFrom&quot;>&#xa;                                            &lt;ns1:valueFrom>&#xa;                                                &lt;xsl:value-of select=&quot;tns1:valueFrom&quot;/>&#xa;                                            &lt;/ns1:valueFrom>&#xa;                                        &lt;/xsl:if>&#xa;                                        &lt;xsl:if test=&quot;tns1:valueTo&quot;>&#xa;                                            &lt;ns1:valueTo>&#xa;                                                &lt;xsl:value-of select=&quot;tns1:valueTo&quot;/>&#xa;                                            &lt;/ns1:valueTo>&#xa;                                        &lt;/xsl:if>&#xa;                                        &lt;xsl:for-each select=&quot;tns1:extension&quot;>&#xa;                                            &lt;ns1:extension>&#xa;                                                &lt;xsl:copy-of select=&quot;*&quot;/>&#xa;                                            &lt;/ns1:extension>&#xa;                                        &lt;/xsl:for-each>&#xa;                                    &lt;/ns1:value>&#xa;                                &lt;/xsl:for-each>&#xa;                                &lt;xsl:for-each select=&quot;tns1:extension&quot;>&#xa;                                    &lt;ns1:extension>&#xa;                                        &lt;xsl:copy-of select=&quot;*&quot;/>&#xa;                                    &lt;/ns1:extension>&#xa;                                &lt;/xsl:for-each>&#xa;                            &lt;/ns1:characteristic>&#xa;                        &lt;/xsl:for-each>&#xa;                        &lt;xsl:if test=&quot;tns1:customerItemID&quot;>&#xa;                            &lt;ns1:customerItemID>&#xa;                                &lt;xsl:value-of select=&quot;tns1:customerItemID&quot;/>&#xa;                            &lt;/ns1:customerItemID>&#xa;                        &lt;/xsl:if>&#xa;                        &lt;xsl:for-each select=&quot;tns1:extension&quot;>&#xa;                            &lt;ns1:extension>&#xa;                                &lt;xsl:copy-of select=&quot;*&quot;/>&#xa;                            &lt;/ns1:extension>&#xa;                        &lt;/xsl:for-each>&#xa;                    &lt;/ns1:line>&#xa;                &lt;/xsl:for-each>&#xa;                &lt;xsl:for-each select=&quot;$Start/tns1:orderRequest/tns1:extension&quot;>&#xa;                    &lt;ns1:extension>&#xa;                        &lt;xsl:copy-of select=&quot;*&quot;/>&#xa;                    &lt;/ns1:extension>&#xa;                &lt;/xsl:for-each>&#xa;            &lt;/ns1:orderRequest>&#xa;        &lt;/ns:ValidateOfferRequest>&#xa;    &lt;/xsl:template>&#xa;&lt;/xsl:stylesheet>" expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xslt1.0"/>
                </tibex:inputBindings>
                <bpws:targets>
                    <bpws:target linkName="LogStartToValidateOffer"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="ValidateOfferToLogEnd"/>
                </bpws:sources>
            </bpws:invoke>
        </bpws:flow>
    </bpws:scope>
</bpws:process>
